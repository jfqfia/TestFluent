/*******************************
 ** Cogito
 *******************************/

(CogitoScheme TS_Run : 
	CogitoCapture {
		( ($MINDBOARD@Setup.DialogueState == 'run')  ||
		  ($MINDBOARD@Setup.DialogueState == 'cont') )
	}

	CogitoAction {
		Task 	activeTaskItem,activeTaskItem_tmp,activeTaskItem_in,activeTaskItem_out;
		ActiveTasks	tlast;
		integer profNumber;
		integer npos,nlen;
		integer nstarting,nend;
		integer cyc;
		integer	pac;
		integer fail;
		integer recv;

		SpyMessage("INIT OF COGITO");
		SpyMessage("=> OPEN");
		SpyMessage($MINDBOARD@Open);
		SpyMessage("=> LASTTHIS");
		SpyMessage($MINDBOARD@LastThis);
		SpyMessage("=> LASTPREV");
		SpyMessage($MINDBOARD@LastPrev);
		SpyMessage("=========================================");

		Erase($MINDBOARD@OStruct);
		$MINDBOARD@LastPrev = $MINDBOARD@LastThis;
		Erase($MINDBOARD@LastThis);

		fail = 0;
		pac  = 0;
		profNumber = DialogueInteractionCounter();
		nlen = BatchSize($MINDBOARD@Open.ActiveTasks);

			nlen = BatchSize($MINDBOARD@Open.ActiveTasks);
			npos = 1;
			recv = 0;
			while (npos <= nlen) {
				BatchExtractInit($MINDBOARD@Open.ActiveTasks,activeTaskItem_in);
				if ( (!!activeTaskItem_in.ActiveCommand.OperPurpose.OperPurposeDescriptor) &&
						(!!activeTaskItem_in.ActiveCommand.ActScope.ActScopeDescriptor)) {
					activeTaskItem_in = InlangexlistdialteLast(activeTaskItem_in);
				}
				if ((recv == 1) && (activeTaskItem_in.profNumber < profNumber)) {
					CogitoRecover(activeTaskItem_in);
				}

				if (activeTaskItem_in.CommandList) {
					activeTaskItem_in.commandStage = 'starting';
				}
	
				activeTaskItem_out = ProcessActionLine(activeTaskItem_in);

				SpyMessage("==================== END OF ProcessActionLine");
				SpyMessage(activeTaskItem_out);
				pac = pac + 1;
	
				Erase(activeTaskItem_out.CommandList);
	
				switch (activeTaskItem_out.commandStage) {
					case 'done' {
						BatchInsertInit(tlast,activeTaskItem_out);
						recv = 1;
					}
					case 'out' {
						BatchInsertInit(tlast,activeTaskItem_out);
					}
					case 'fail' {
						BatchInsertInit($MINDBOARD@Fail.ActiveTasks,activeTaskItem_out);
						fail = 1;
						recv = 1;
					}
					default {
							BatchInsertEnd($MINDBOARD@Open.ActiveTasks,
									activeTaskItem_out);
					}
				}

				npos = npos + 1;
			}

		/*
		SpyMessage("Estrategia 1");
		SpyMessage($MINDBOARD@Open.WaitingTasks);

		if ((BatchSize($MINDBOARD@Open.ActiveTasks) == 0) &&
				(BatchSize($MINDBOARD@LastPrev.ActiveTasks) == 0)) {
			nlen = BatchSize($MINDBOARD@Open.WaitingTasks);
			npos = 1;
			while (npos <= nlen) {
				BatchExtractInit($MINDBOARD@Open.WaitingTasks,activeTaskItem);
				
				integer found;
				Task uline,lline;
				integer llen, lpos;
				found = 0;

				llen = BatchSize($MINDBOARD@Open.ActiveTasks);
				lpos = 1;
				while ((found == 0) && (lpos <= llen)) {
					BatchExtractInit($MINDBOARD@Open.ActiveTasks,lline);
					if (AnalyzeOperPurposeLinkedInfoCoherence(
							lline.ActiveCommand.OperPurpose.OperPurposeDescriptor,
							activeTaskItem.ActiveCommand.LinkedInfo.LinkedInfoDescriptor) &&
					    AnalyzeActScopeLinkedInfoCoherence(
							lline.ActiveCommand.ActScope.ActScopeDescriptor,
							activeTaskItem.ActiveCommand.LinkedInfo)) {
						lline.InputCommand <OW< activeTaskItem.ActiveCommand;
						found = 1;
					}
					BatchInsertEnd($MINDBOARD@Open.ActiveTasks,
								lline);
						
					lpos = lpos + 1;
				}

				if (found == 0) {
					activeTaskItem = DefaultOperPurposeActScope(activeTaskItem);
					BatchInsertInit($MINDBOARD@Open.ActiveTasks,activeTaskItem);
				}

				npos = npos + 1;
			}
		}

		SpyMessage("Estrategia 2");
		SpyMessage($MINDBOARD@Open.WaitingTasks);
		if (BatchSize($MINDBOARD@Open.ActiveTasks) != 0) {
			nlen = BatchSize($MINDBOARD@Open.WaitingTasks);
			npos = 1;
			while (npos <= nlen) {
				BatchExtractInit($MINDBOARD@Open.WaitingTasks,activeTaskItem);
				
				integer found;
				Task uline,lline;
				integer llen, lpos;
				found = 0;

				llen = BatchSize($MINDBOARD@Open.ActiveTasks);
				lpos = 1;
				while ((found == 0) && (lpos <= llen)) {
					BatchExtractInit($MINDBOARD@Open.ActiveTasks,lline);
					if (AnalyzeOperPurposeLinkedInfoCoherence(
							lline.ActiveCommand.OperPurpose.OperPurposeDescriptor,
							activeTaskItem.ActiveCommand.LinkedInfo.LinkedInfoDescriptor) &&
					    AnalyzeActScopeLinkedInfoCoherence(
							lline.ActiveCommand.ActScope.ActScopeDescriptor,
							activeTaskItem.ActiveCommand.LinkedInfo)) {
						lline.InputCommand <OW< activeTaskItem.ActiveCommand;
						found = 1;
					}
					BatchInsertEnd($MINDBOARD@Open.ActiveTasks,
								lline);
						
					lpos = lpos + 1;
				}

				if (found == 0) {
					BatchInsertInit($MINDBOARD@Open.WaitingTasks,activeTaskItem);
				}

				npos = npos + 1;
			}
		}

		SpyMessage("Estrategia 3");
		SpyMessage($MINDBOARD@Open.WaitingTasks);
		nlen = BatchSize($MINDBOARD@Open.WaitingTasks);
		if (nlen > 0) {
			npos = 1;
			integer found;
			Task uline,lline;
			integer llen, lpos;
			found = 0;
			while ((found == 0) && (npos <= nlen)) {
				BatchExtractInit($MINDBOARD@Open.WaitingTasks,uline);

				llen = BatchSize($MINDBOARD@LastPrev.ActiveTasks);
				lpos = 1;
				while (lpos <= llen) {
					BatchRecoverPosition($MINDBOARD@LastPrev.ActiveTasks,lpos,lline);
					if (AnalyzeOperPurposeLinkedInfoCoherence(
							lline.ActiveCommand.OperPurpose.OperPurposeDescriptor,
							uline.ActiveCommand.LinkedInfo.LinkedInfoDescriptor) &&
					    AnalyzeActScopeLinkedInfoCoherence(
							lline.ActiveCommand.ActScope.ActScopeDescriptor,
							uline.ActiveCommand.LinkedInfo)) {
						lline.InputCommand <OW< uline.ActiveCommand;
						Erase(lline.commandStage);
						BatchInsertInit($MINDBOARD@Open.ActiveTasks,
								lline);
						found = 1;
					}
					
					lpos = lpos + 1;
				}

				if (found == 0) {
					BatchInsertInit($MINDBOARD@Open.WaitingTasks,uline);
				}

				npos = npos + 1;
			}
		}

		SpyMessage("Estrategia 4");
		SpyMessage($MINDBOARD@Open.WaitingTasks);
		nlen = BatchSize($MINDBOARD@Open.WaitingTasks);
		npos = 1;
		while (npos <= nlen) {
			BatchExtractInit($MINDBOARD@Open.WaitingTasks,activeTaskItem);

			integer found;
			Task uline,lline;
			integer llen, lpos;
			found = 0;

			llen = BatchSize($MINDBOARD@Open.ActiveTasks);
			lpos = 1;
			while ((found == 0) && (lpos <= llen)) {
				BatchExtractInit($MINDBOARD@Open.ActiveTasks,lline);
				if (AnalyzeOperPurposeLinkedInfoCoherence(
						lline.ActiveCommand.OperPurpose.OperPurposeDescriptor,
						activeTaskItem.ActiveCommand.LinkedInfo.LinkedInfoDescriptor) &&
				    AnalyzeActScopeLinkedInfoCoherence(
						lline.ActiveCommand.ActScope.ActScopeDescriptor,
						activeTaskItem.ActiveCommand.LinkedInfo)) {
					lline.InputCommand <OW< activeTaskItem.ActiveCommand;
					found = 1;
				}
				BatchInsertEnd($MINDBOARD@Open.ActiveTasks,
							lline);
					
				lpos = lpos + 1;
			}

			if (found == 0) {
				if (activeTaskItem.ActiveCommand.LinkedInfo.LinkedInfoDescriptor != 'intseqn') {
					activeTaskItem = DefaultOperPurposeActScope(activeTaskItem);
					BatchInsertInit($MINDBOARD@Open.ActiveTasks,activeTaskItem);
				}
			}

			npos = npos + 1;
		}
				
		SpyMessage("FinEstrategias");
		SpyMessage($MINDBOARD@Open);

		// Procesar todos los componentes Open
		nlen = BatchSize($MINDBOARD@Open.ActiveTasks);
		if (nlen > 0) {

			nstarting = 1;
			nend = nlen;
			if(nstarting == nend) {
				cyc = 0;
			}
			else {
				cyc = 1;
			}
			
			while ((cyc == 1) && (nstarting < nend)) {
				BatchRecoverPosition($MINDBOARD@Open.ActiveTasks,nstarting,activeTaskItem_tmp);
				BatchRecoverPosition($MINDBOARD@Open.ActiveTasks,nend,activeTaskItem);
				if ((activeTaskItem.profNumber == profNumber) && (activeTaskItem.profNumber!=activeTaskItem_tmp.profNumber)) {
					BatchExchange($MINDBOARD@Open.ActiveTasks,nstarting,nend);
					nstarting = nstarting + 1;
					nend = nend - 1;
				} else {
					cyc = 0;
				}
			}

			nlen = BatchSize($MINDBOARD@Open.ActiveTasks);
			npos = 1;
			recv = 0;
			while (npos <= nlen) {
				BatchExtractInit($MINDBOARD@Open.ActiveTasks,activeTaskItem_in);
				if ( (!!activeTaskItem_in.ActiveCommand.OperPurpose.OperPurposeDescriptor) &&
						(!!activeTaskItem_in.ActiveCommand.ActScope.ActScopeDescriptor)) {
					activeTaskItem_in = InlangexlistdialteLast(activeTaskItem_in);
				}
				if ((recv == 1) && (activeTaskItem_in.profNumber < profNumber)) {
					CogitoRecover(activeTaskItem_in);
				}

				if (activeTaskItem_in.CommandList) {
					activeTaskItem_in.commandStage = 'starting';
				}
	
				activeTaskItem_out = ProcessActionLine(activeTaskItem_in);
				pac = pac + 1;
	
				Erase(activeTaskItem_out.CommandList);
	
				switch (activeTaskItem_out.commandStage) {
					case 'done' {
						BatchInsertInit(tlast,activeTaskItem_out);
						recv = 1;
					}
					case 'out' {
						BatchInsertInit(tlast,activeTaskItem_out);
					}
					case 'fail' {
						BatchInsertInit($MINDBOARD@Fail.ActiveTasks,activeTaskItem_out);
						fail = 1;
						recv = 1;
					}
					default {
							BatchInsertEnd($MINDBOARD@Open.ActiveTasks,
									activeTaskItem_out);
					}
				}

				npos = npos + 1;
			}

		}

		nlen = BatchSize($MINDBOARD@LastPrev.ActiveTasks);
		npos = 1;
		while (npos <= nlen) {
			BatchExtractEnd($MINDBOARD@LastPrev.ActiveTasks,activeTaskItem);
			BatchInsertInit($MINDBOARD@Done.ActiveTasks,activeTaskItem);
			npos = npos + 1;
		}

		$MINDBOARD@LastThis.ActiveTasks = tlast;

		if (!!pac) { // no Process Action Line
			cond {
				($MINDBOARD@Interaction.InterPardon =:= 'on') {
					CogitoInterPardon();
				}
				($MINDBOARD@Interaction.InterGreeting) {
					CogitoHello();
				}
				($MINDBOARD@Interaction.InterThanks =:= 'on') {
					CogitoHello();
				}
				($MINDBOARD@Interaction.InterFarewell =:= 'on') {
					CogitoClose();
				}
				default {
					if ((BatchSize($MINDBOARD@LastThis.ActiveTasks) > 0) ||
							(BatchSize($MINDBOARD@Done.ActiveTasks) > 0)) {
						CogitoContinuationFromNoInput();
					} else {
						CogitoNewFromNoInput();
					}
				}
			}
		} else {
			if (BatchSize($MINDBOARD@Open.ActiveTasks) == 0) {
				if ((BatchSize($MINDBOARD@LastThis.ActiveTasks) > 0) ||
						(BatchSize($MINDBOARD@Done.ActiveTasks) > 0)) {
					CogitoContinuation();
				} else {
					CogitoNew();
				}
			}
		}

		if (BatchSize($MINDBOARD@OStruct.OScheme) ==  
				BatchSize($MINDBOARD@LastOStruct.OScheme)) {
			LOutput lout_c;
			LOutput lout_l;
			BatchRecoverPosition($MINDBOARD@OStruct.OScheme,1,lout_c);
			BatchRecoverPosition($MINDBOARD@LastOStruct.OScheme,1,lout_l);
			if (lout_c == lout_l) {
				if (lout_c.LMode != 'ask') {
					Erase($MINDBOARD@OStruct);
					CogitoRep();
				}
			}
		}

		if (BatchSize($MINDBOARD@OStruct.OScheme) == 0) { // No output
			if ((BatchSize($MINDBOARD@LastThis.ActiveTasks) > 0) ||
					(BatchSize($MINDBOARD@Done.ActiveTasks) > 0)) {
				CogitoContinuation();
			} else {
				CogitoNew();
			}
		}

		*/

		$MINDBOARD@LastOStruct = $MINDBOARD@OStruct;

		SpyMessage("END OF COGITO");
		SpyMessage("=> DONE");
		SpyMessage($MINDBOARD@Done);
		SpyMessage("=> LASTPREV");
		SpyMessage($MINDBOARD@LastPrev);
		SpyMessage("=> LASTTHIS");
		SpyMessage($MINDBOARD@LastThis);
		SpyMessage("=> OPEN");
		SpyMessage($MINDBOARD@Open);
		SpyMessage("=> OUTPUT");
		SpyMessage($MINDBOARD@OStruct);
		SpyMessage("=> LASTOUTPUT");
		SpyMessage($MINDBOARD@LastOStruct);
		SpyMessage("=========================================");

		Erase($MINDBOARD@Open.WaitingTasks);
		Erase($MINDBOARD@Interaction);
	}
)

(CogitoScheme TS_Start : 
	CogitoCapture {
		($MINDBOARD@Setup.DialogueState == 'start') 
	}

	CogitoAction {
		SpyMessage("Call: TS_Start");
		CogitoStart();
	}
)

(CogitoScheme TS_Close : 
	CogitoCapture {
		($MINDBOARD@Setup.DialogueState == 'close') 
	}

	CogitoAction {
		CogitoClose();
	}
)

(CogitoScheme TS_Stop : 
	CogitoCapture {
		($MINDBOARD@Setup.DialogueState == 'stop') 
	}

	CogitoAction {
		CogitoStop();
	}
)

(CogitoScheme TS_New : 
	CogitoCapture {
		($MINDBOARD@Setup.DialogueState == 'new') 
	}

	CogitoAction {
		CogitoNew();
	}
)
