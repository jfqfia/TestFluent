/*******************************
 ** Scribo / Error
 *******************************/

/*
(ScriboScheme NLG_Error_No_User: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'phaseInformPersonalIdNonExistent')
    }

    ScriboAction {
        if ($MINDBOARD@Setup.ModalSetup == 'web') {
		SetMainAnswerTextRandom("Disculpe, ¿es el DNI número ",
					"Perdone, ¿me dijo que era el DNI número ",
					"Perdón, ¿ha dicho que era el DNI ");
		SetMainAnswer(#OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.PersonalId.PersonalRef);
		SetMainAnswer("? ");
		SetMainAnswerTextRandom("El problema es que este DNI no está en nuestra base de datos. ",
					"Este número no se encuentra registrado. ",
					"No encuentro este valor en la base de clientes. ");

		SetMainAnswer("Por favor, si se trata de un error indíqueme el valor correcto.");
	}
	else {
		SetMainAnswerTextRandom("Disculpe, ¿es el \\lkt_text=<DNI>\\lkt_tts=<de neí> \\stress=no número ",
					"Perdone. ¿Me dijo que era el \\lkt_text=<DNI>\\lkt_tts=<de neí> \\stress=no número ",
					"Perdón, ¿ha dicho que era el \\lkt_text=<DNI>\\lkt_tts=<de neí> ");
		SetMainAnswer(#OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.PersonalId.PersonalRef);
		SetMainAnswer("? ");
		SetMainAnswerTextRandom("El problema es que este \\lkt_text=<DNI>\\lkt_tts=<de neí> no está en nuestra base de datos. ",
					"Este número no se encuentra registrado. ",
					"No encuentro este valor en la base de clientes. ");

		SetMainAnswer("Por favor, si se trata de un error indíqueme el valor correcto.");
	}
    }
)

(ScriboScheme NLG_Error_User_Id: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'phaseInformPersonalIdInvalid')
    }

    ScriboAction {
        if ($MINDBOARD@Setup.ModalSetup == 'web') {
		SetMainAnswerTextRandom("Disculpe, he entendido que su DNI es el número ",
					"Perdone, he entendido que su número de identidad es ",
					"Perdón, estaba buscando el documento de identidad número ");
		SetMainAnswer(#OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.PersonalId.PersonalRef);
		SetMainAnswer(". ");

		SetMainAnswer("¿Es éste el valor correcto?");
	}
	else {
		SetMainAnswerTextRandom("Disculpe, he entendido que su \\lkt_text=<DNI>\\lkt_tts=<de>\\stress=no \\lkt_tts=neí es el número ",
					"Perdone, he entendido que su número de identidad es ",
					"Perdón, estaba buscando el documento de identidad número ");
		SetMainAnswer(#OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.PersonalId.PersonalRef);
		SetMainAnswer(". ");

		SetMainAnswer("¿Es\\pitch=70 éste\\pitch el valor correcto?");
	}
    }
)

(ScriboScheme NLG_Error_User_Incoherence: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'phasePersonalIdError')
    }

    ScriboAction {
        if ($MINDBOARD@Setup.ModalSetup == 'web') {
		SetMainAnswer("Disculpe, pero debe haber un error en nuestro sistema de información, ya que el DNI número ");
	}
	else {
		SetMainAnswer("Disculpe, pero debe haber un error en nuestro sistema de información, ya que el \\lkt_text=<DNI>\\lkt_tts=<de neí> número ");
	}
	SetMainAnswer(#OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.PersonalId.PersonalRef);
	SetMainAnswer(" aparece asignado a ");
	switch (#OBJLOCUTIO-1.IContext.TemporalMemory.TemporalData.PersonalRecord.UserData.UserGenre) {
		case 'male' {
			SetMainAnswer("Don ");
		}
		case 'female' {
			SetMainAnswer("Doña ");
		}
	}
	SetMainAnswer(#OBJLOCUTIO-1.IContext.TemporalMemory.TemporalData.PersonalRecord.UserData.UserName);
	SetMainAnswer(" ");
	SetMainAnswer(#OBJLOCUTIO-1.IContext.TemporalMemory.TemporalData.PersonalRecord.UserData.UserSurname);
	SetMainAnswer(".");
	SetMainAnswer(" Le tomamos nota de sus datos y nos pondremos en contacto con usted para solucionar este problema.");
    }
)
*/

/*
(ScriboScheme NLG_Error_Itinerary_Origin: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'route-origin')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswerTextRandom("Disculpe, pero ",
			"Lo sentimos pero ",
			"No me es posible encontrarle un vuelo, ya que ");
	SetMainAnswerTextRandom("no volamos desde ",
			"nuestra compañía no opera desde ",
			"no operamos desde ");
	SetMainAnswer(SiteNodeString(route.Origin.Site.SiteNode));

	SetMainAnswer(". ");
    }
)

(ScriboScheme NLG_Error_Itinerary_Destination: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'route-destination')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswerTextRandom("Disculpe, pero ",
			"Lo sentimos pero ",
			"No me es posible encontrarle un vuelo, ya que ");
	SetMainAnswerTextRandom("no volamos a ",
			"nuestra compañía no opera con ",
			"no operamos a ");
	SetMainAnswer(SiteNodeString(route.Destination.Site.SiteNode));

	SetMainAnswer(". ");
    }
)

(ScriboScheme NLG_Error_Itinerary_Destination: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'route')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswerTextRandom("Disculpe, pero ",
			"Lo sentimos pero ",
			"No me es posible encontrarle un vuelo, ya que ");
	SetMainAnswerTextRandom(
			"nuestra compañía no opera la ruta ",
			"no operamos el trayecto ");
	SetMainAnswer(SiteNodeString(route.Origin.Site.SiteNode));
	SetMainAnswerText(" ");
	SetMainAnswer(SiteNodeString(route.Destination.Site.SiteNode));

	SetMainAnswer(". ");
    }
)

(ScriboScheme NLG_Error_Itinerary_Origin: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'route-origin-destination')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswerTextRandom("Disculpe, pero ",
			"Lo sentimos pero ",
			"No me es posible encontrarle un vuelo, ya que ");
	SetMainAnswerTextRandom(
			"no volamos ni desde ",
			"nuestra compañía no opera ni desde ",
			"no operamos ni desde ");
	SetMainAnswer(SiteNodeString(route.Origin.Site.SiteNode));

	SetMainAnswerTextRandom(" ni hacia ",
			" ni tampoco con ",
			" y tampoco a ");
	SetMainAnswer(SiteNodeString(route.Destination.Site.SiteNode));
	SetMainAnswer(". ");
    }
)

(ScriboScheme NLG_Error_Timetable_Go: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'timetable-go')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	date <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.DepartureGlobalDate;
	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswer("Disculpe, pero para ");
	SetMainAnswer(GlobalDate2String(date));

	SetMainAnswer(", ");
	SetMainAnswer(Itinerary2StringGo(route));

	SetMainAnswer(", no hay ningún vuelo.");
    }
)

(ScriboScheme NLG_Error_Timetable_Back: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'timetable-back')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	date <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.ReturnGlobalDate;
	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswer("Para el regreso ");
	SetMainAnswer(GlobalDate2String(date));

	SetMainAnswer(", ");
	SetMainAnswer(Itinerary2StringBack(route));

	SetMainAnswer(", no hay ningún vuelo.");
    }
)

(ScriboScheme NLG_Error_Flight_Go: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'flight-go')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	date <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.DepartureGlobalDate;
	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswer("Disculpe, pero para ");
	SetMainAnswer(GlobalDate2String(date));

	SetMainAnswer(", ");
	SetMainAnswer(Itinerary2StringGo(route));

	SetMainAnswer(", no hay ningún vuelo.");
    }
)

(ScriboScheme NLG_Error_Flight_Back: [LOutput]
    ScriboCapture {
        #OBJLOCUTIO-1 =:= (LMode:'error',TField:'flight-back')
    }

    ScriboAction {
	GlobalDate date;
	Itinerary route;

	date <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.ReturnGlobalDate;
	route <- #OBJLOCUTIO-1.IContext.ActiveCommand.LinkedInfo.Itinerary;

	SetMainAnswer("Para el regreso ");
	SetMainAnswer(GlobalDate2String(date));

	SetMainAnswer(", ");
	SetMainAnswer(Itinerary2StringBack(route));

	SetMainAnswer(", no hay ningún vuelo.");
    }
)
*/
