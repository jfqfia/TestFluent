/*******************************
 ** Scribo / Appoint / Functions
 *******************************/

string	AppointGlobalDate2String(AppointGlobalDate appointdate)
{
	string	str_date;

	str_date <- LiteralConcat('el día ',
			ShapeToString(appointdate.AppointPeriodDay),
			' de ',
			PeriodPeriodMonthDesc(appointdate.AppointPeriodMonth),
			' ');

	if (appointdate.AppointPeriodYear =!= ClockAskYear()) {
		str_date <- LiteralConcat(str_date,
				'de ',
				ShapeToString(appointdate.AppointPeriodYear),
				' ');
	}

	str_date <- LiteralConcat(str_date,
			'a ',
			TimeName(appointdate.AppointPeriodHourInit,
				appointdate.AppointMinInit),' ');
	return str_date;
}

string	AppointGlobalDate2StringContrast(AppointGlobalDate appointdate,AppointGlobalDate appointdateprev)
{
	string	str_date;

	if ((appointdate.AppointPeriodYear == appointdateprev.AppointPeriodYear) &&
			(appointdate.AppointPeriodMonth == appointdateprev.AppointPeriodMonth)) {
		if (appointdate.AppointPeriodDay == appointdateprev.AppointPeriodDay) {
			str_date <- LiteralConcat('el mismo día ',
				ShapeToString(appointdate.AppointPeriodDay),
				' ');
		} else {
			str_date <- LiteralConcat('el día ',
				ShapeToString(appointdate.AppointPeriodDay),
				' ');
		}

		str_date <- LiteralConcat(str_date,
				'a ',
				TimeName(appointdate.AppointPeriodHourInit,
					appointdate.AppointMinInit),' ');
	} else {
		str_date <- AppointGlobalDate2String(appointdate);
	}

	return str_date;
}


string	Doctor2String(AppointDoctor appointdoctor)
{
	return LiteralConcat('con el doctor ',
			appointdoctor.DoctorSurname1,
			' ',
			appointdoctor.DoctorSurname2);
}

string	Doctor2StringContrast(AppointDoctor appointdoctor,AppointDoctor appointdoctorprev)
{
	if (appointdoctor == appointdoctorprev) {
		return 'con el mismo doctor';
	} else {
		return Doctor2String(appointdoctor);
	}
}
