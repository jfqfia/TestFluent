/*******************************
 ** Open / Functions
 *******************************/


integer	raiseNewOpenModel(Command linput)
{
	integer cupn;
	cupn <- DialogueInteractionCounter();

	$MINDBOARD@fOpen.ReceivedCommand <- linput;
	$MINDBOARD@fOpen.RProf  <- cupn;

	return 1;
}

integer	raiseFusionOpenModel(Command linput)
{
	integer cupn;

	$MINDBOARD@fOpen.ReceivedCommand <| linput;
	$MINDBOARD@fOpen.RProf  <- cupn;

	return 1;
}

integer	raisePendModel(Command linput) 
{
	TaskLine taskline;
	integer npos,nlen,found;
	nlen <- BatchSize($MINDBOARD@fPend.TaskScheme);
	found <- 0;
	npos <- 1;
	while ((!!found) && (npos <= nlen)) {
		BatchRecoverPosition($MINDBOARD@fPend.TaskScheme,npos,taskline);
		if ((taskline.ReceivedCommand.OperPurpose =:= linput.OperPurpose) &&
		    (AnalyzeActScopeActScopeCoherence(taskline.ReceivedCommand.ActScope.ActScopeDescriptor,
					linput.ActScope.ActScopeDescriptor))) {
			raiseFusionPendModel(taskline,linput,npos);
			found <- 1;
		} else {
			npos <- npos + 1;
		}
	}
	if (!!found) {
		raiseNewPendModel(linput);
	}
	$MINDBOARD@fOpen.RProf  <- cupn;
}

integer	raiseNewPendModel(Command linput) 
{
	TaskLine taskline;
	integer cupn;

	cupn <- DialogueInteractionCounter();

	taskline.ReceivedCommand <- linput;
	taskline.RProf  <- cupn;

	BatchInsertInit($MINDBOARD@fPend.TaskScheme,taskline);

	return 1;
}

integer	raiseFusionPendModel(TaskLine taskline,Command linput,integer open_pos)
{
	integer cupn;

	cupn <- DialogueInteractionCounter();

	taskline.ReceivedCommand <| linput;
	taskline.RProf <- cupn;

	BatchAssignPosition($MINDBOARD@fPend.TaskScheme,open_pos,taskline);
	if (open_pos > 1) {
		BatchExchange($MINDBOARD@fPend.TaskScheme,
				1,open_pos);
	}

	return 1;
}
