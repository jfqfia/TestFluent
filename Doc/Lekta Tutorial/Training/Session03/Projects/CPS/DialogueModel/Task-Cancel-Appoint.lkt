/*******************************
 ** Task / Cancel Appoint
 *******************************/

TaskLine	ExecuteTaskCancelAppoint(TaskLine tline_in)
{
	TaskLine tline_proc;
	integer cycle;
	WStep prev_wprotocol;

	if (!!tline_in.WStep) {
		tline_in.WStep <- 'look-person';
	}

	switch (tline_in.WStep) {
		case 'ask-identity-personalid' {
			tline_in.WStep <- 'look-identity-personalid';
		}
		case 'check-identity-personalid' {
			tline_in.WStep <- 'look-identity-personalid';
		}
		case 'error-identity-personalid' {
			tline_in.WStep <- 'look-identity-personalid';
		}
	}

	if (tline_in.ReceivedCommand.LinkedInfo.Person) {
		tline_in.WStep <- 'look-person';
	}

	tline_proc <- tline_in;
	tline_proc <- LookPerson(tline_proc);
	cycle <- 1;
	while (cycle == 1) {
		prev_wprotocol <- tline_proc.WStep;
		//SpyMessage("=> Protocol: ",tline_proc.WStep);
		switch (tline_proc.WStep) {
			case 'look-person' {
				tline_proc <- LookPerson(tline_proc);
				SetLangExDialStrategy(110);
			}
			case 'ask-person' {
				tline_proc <- AskPerson(tline_proc);
				SetLangExDialStrategy(120);
			}
			case 'check-person' {
				tline_proc <- VerifyPerson(tline_proc);
				SetLangExDialStrategy(130);
			}
			case 'look-identity-personalid' {
				tline_proc <- LookIdentityPersonalId(tline_proc);
				SetLangExDialStrategy(210);
			}
			case 'ask-identity-personalid' {
				tline_proc <- AskIdentityPersonalId(tline_proc);
				SetLangExDialStrategy(220);
			}
			case 'check-identity-personalid' {
				tline_proc <- VerifyIdentityPersonalId(tline_proc);
				SetLangExDialStrategy(230);
			}
			case 'error-identity-personalid' {
				tline_proc <- ErrorIdentityPersonalId(tline_proc);
				SetLangExDialStrategy(240);
			}
			case 'multiple-identity-personalid' {
				tline_proc <- MultipleIdentityPersonalId(tline_proc);
				//SetLangExDialStrategy(240);
			}
			case 'look-multiple-identity-personalid' {
				tline_proc <- LookMultipleIdentityPersonalId(tline_proc);
				//SetLangExDialStrategy(240);
			}
			case 'run-task' {
				tline_proc <- CancelAppoint(tline_proc);
				SetLangExDialStrategy(520);
			}
			case 'inform-consult-appoint-ok' {
				tline_proc <- InformCancelAppointOk(tline_proc);
				SetLangExDialStrategy(910);
			}
			case 'inform-consult-appoint-no' {
				tline_proc <- InformCancelAppointNo(tline_proc);
				SetLangExDialStrategy(920);
			}
			case 'select-cancel-appoint' {
				tline_proc <- SelectCancelAppoint(tline_proc);
				SetLangExDialStrategy(710);
			}
			case 'ask-cancel-appoint' {
				tline_proc <- AskCancelAppoint(tline_proc);
				SetLangExDialStrategy(710);
			}
			case 'exec-cancel-appoint' {
				tline_proc <- ExecCancelAppoint(tline_proc);
				SetLangExDialStrategy(720);
			}
			case 'close' {
				tline_proc.WStep <- 'done';
				SetOperativeEnding(1020); // Cancel Appoint
			}
			case 'fail' {
				tline_proc.WStep <- 'fail';
				cycle <- 0;
			}
		}
		if (prev_wprotocol == tline_proc.WStep) {
			cycle <- 0;
		}
	}
	
	return tline_proc;
}

TaskLine	CancelAppoint(TaskLine tline)
{
	PatientInfo	patientinfo;

	patientinfo <- WS_RequestPatientIdentity(tline.GModel.LinkedInfo.UserId.PersonalIdentity,
					tline.GModel.LinkedInfo.Person.PersonHasPersonalId);

	tline.WData.PatientInfo <- patientinfo;

	if (patientinfo.PatientError.PatientErrorCode == 1001) {
		tline.WStep <- 'error-identity-personalid';
	} else {
		if (patientinfo.PatientNumb == 1) {
			BatchRecoverPosition(patientinfo.PatientSeq,
					1,
					tline.WData.PatientData);
			if (tline.GModel.LinkedInfo.Person.PersonDegree == 'self') {
				tline.WData.Speaker <- tline.WData.PatientData;
			}

			if (tline.WData.PatientData.AppointInfo.AppointNumb == 0) {
				tline.WStep <- 'inform-consult-appoint-no';
			} else {
				tline.WStep <- 'inform-consult-appoint-ok';
			}
		} else {
			tline.WStep <- 'multiple-identity-personalid';
		}
	}

	return tline;
}

TaskLine	InformCancelAppointNo(TaskLine tline)
{
	LOutput loutput <- (LMode:'inform',TField:'consult-appoint-no');
	loutput.TContext <- tline;
	BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);

	tline.WStep <- 'close';

	return tline;
}

TaskLine	InformCancelAppointOk(TaskLine tline)
{
	AppointInfo	appointinfo;

	LOutput loutput <- (LMode:'inform',TField:'consult-appoint-ok');
	loutput.TContext <- tline;
	BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);

	appointinfo <- tline.WData.PatientData.AppointInfo;

	if (appointinfo.AppointNumb == 1) {
		BatchRecoverPosition(appointinfo.AppointSeq, 1, tline.WData.AppointData);
		tline.WStep <- 'ask-cancel-appoint';
	} else {
		BatchRecoverPosition(appointinfo.AppointSeq, 1, tline.WData.AppointData);
		tline.WStep <- 'select-cancel-appoint';
	}

	return tline;
}

TaskLine	AskCancelAppoint(TaskLine tline)
{
	cond {
		(tline.ReceivedCommand.Conversation.Verify) {
			tline.WStep <- 'exec-cancel-appoint';
			Erase(tline.ReceivedCommand.Conversation.Verify);
		}
		(tline.ReceivedCommand.Conversation.Refuse) {
			tline.WStep <- 'done';
			Erase(tline.ReceivedCommand.Conversation.Refuse);
		}
		default {
			LOutput loutput <- (LMode:'ask',TField:'cancel-appoint');
			loutput.TContext <- tline;
			BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);
		}
	}

	return tline;
}

TaskLine	SelectCancelAppoint(TaskLine tline)
{
	AppointInfo appointinfo;
	integer	    appointlen;
	integer     vref;

	appointinfo <- tline.WData.PatientData.AppointInfo;
	appointlen <- appointinfo.AppointNumb;

/*
Command_Info:(LinkedInfo:(GlobalDate:(Time:(PeriodHour  :5,
                             PeriodMinute:20))))
Command_Info:(LinkedInfo:(Number:(valOrd:1)))
*/

	cond {
		(tline.ReceivedCommand.LinkedInfo.Number.valOrd) {
			vref <- appointlen + tline.ReceivedCommand.LinkedInfo.Number.valTer;
			if (tline.ReceivedCommand.LinkedInfo.Number.valOrd <= appointlen) {
				BatchRecoverPosition(appointinfo.AppointSeq, 
					vref,
					tline.WData.AppointData);
				tline.WStep <- 'ask-cancel-appoint';
			} else {
				LOutput loutput <- (LMode:'inform',TField:'nosense');
				BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);
			}
			Erase(tline.ReceivedCommand.LinkedInfo.Number);
		}
		(tline.ReceivedCommand.LinkedInfo.Number.valTer) {
			vref <- appointlen - tline.ReceivedCommand.LinkedInfo.Number.valTer;
			if (vref > 0) {
				BatchRecoverPosition(appointinfo.AppointSeq, 
					vref,
					tline.WData.AppointData);
				tline.WStep <- 'ask-cancel-appoint';
			} else {
				LOutput loutput <- (LMode:'inform',TField:'nosense');
				BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);
			}
			Erase(tline.ReceivedCommand.LinkedInfo.Number);
		}
		default {
			LOutput loutput <- (LMode:'ask',TField:'which-cancel-appoint');
			loutput.TContext <- tline;
			BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);
		}
	}

	return tline;
}

TaskLine	ExecCancelAppoint(TaskLine tline)
{
	integer	cancel;

	cancel <- WS_CancelAppointmentRequest(tline.WData.PatientData,
					tline.WData.AppointData);

	if (cancel == 1) {
		LOutput loutput <- (LMode:'exec',TField:'cancel-appoint-ok');
		loutput.TContext <- tline;
		BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);
	} else {
		LOutput loutput <- (LMode:'exec',TField:'cancel-appoint-error');
		loutput.TContext <- tline;
		BatchInsertEnd($MINDBOARD@OStruct.OScheme,loutput);
	}

	tline.WStep <- 'done';

	return tline;
}
