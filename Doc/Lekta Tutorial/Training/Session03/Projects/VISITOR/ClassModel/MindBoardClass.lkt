/*******************************
 ** MindBoard
 *******************************/

	// => BI (Backoffice Information)

		///////////////////////////// => PersonalRecord

	classDef:ElementLiteral
		( UserPersonalId ) 

	classDef:ElementRange
		( UserGenre : { 'male', 'female', 'unknown' } )

	classDef:ElementLiteral
		( UserName )

	classDef:ElementLiteral
		( UserSurname )

	classDef:ElementInt
		( UserPoints )

	classDef:StructureComplex
		( UserData : (
			UserGenre,
			UserName,
			UserSurname,
			UserPoints ) )

	classDef:ElementInt
		( UserErrorCode )

	classDef:StructureComplex
		( UserError : (
			UserErrorCode ) )

	classDef:StructureComplex
		( PersonalRecord : (
			UserPersonalId,
			UserData,
			UserError ) )

		///////////////////////////// => FlightInfo

	classDef:Synonym (FlightGlobalDate = GlobalDate)

	classDef:ElementInt
		( FlightErrorCode )

	classDef:StructureComplex
		( FlightError : (
			FlightErrorCode ) )

	classDef:ElementLiteral
		( DataFlightNumber )

	classDef:ElementLiteral
		( DataFlightOrigin )

	classDef:ElementLiteral
		( DataFlightDestination )

	classDef:ElementInt
		( DataFlightTimeDeparturePeriodHour )

	classDef:ElementLiteral
		( DataFlightTimeDeparture )

	classDef:ElementLiteral
		( DataFlightTimeArrival )

	classDef:ElementInt
		( DataFlightFICAvail, DataFlightTURAvail )

	classDef:ElementReal
		( DataFlightFICFare, DataFlightTURFare )

	classDef:StructureComplex
		( DataFlight : (
			DataFlightNumber,
			DataFlightOrigin,
			DataFlightDestination,
			DataFlightTimeDeparture,
			DataFlightTimeDeparturePeriodHour,
			DataFlightTimeArrival,
			DataFlightFICAvail,
			DataFlightFICFare,
			DataFlightTURAvail,
			DataFlightTURFare) )

	classDef:StructureBatch
		( FlightData : (
			DataFlight ) )

	classDef:ElementInt
		( FlightNumb, FlightNTop, FlightNFoc, FlightNBot, FlightNOut )

	classDef:StructureComplex
		( RecordFlightGo, RecordFlightBack : (
			FlightData,
			FlightNumb,
			FlightNTop,
			FlightNFoc,
			FlightNBot,
			FlightNOut,
			FlightError ) )

	// -> MindBoard / Setup
	classDef:ElementRange 
		( ActionSetup,ActionFrom: {
			'start',
			'run',
			'cont',
			'new',
			'next',
			'close',
			'stop'
		} )

	classDef:StructureComplex
		( LangExDialStart : (
			ActionSetup
		) )

	classDef:ElementRange 
		( ActionTimeOut: {
			'recall',
			'warning',
			'finish',
			'kill',
			'destroy'
		} )

	classDef:StructureComplex
		( LangExDialTimeOut : (
			ActionTimeOut
		) )

	classDef:ElementRange
		( ActionHangUp: {
			'hangup'
		} )

	classDef:StructureComplex
		( LangExDialHangUp : (
			ActionHangUp
		) )

	classDef:ElementRange
		( ActionBadInput: {
			'nfw_threshold'
		} )

	classDef:StructureComplex
		( LangExDialBadInput : (
			ActionBadInput
		) )

	classDef:StructureComplex 
		( ST: (
			ActionFrom,
			ActionSetup,
			ActionTimeOut,
			ActionHangUp,
			ActionBadInput
		) )

