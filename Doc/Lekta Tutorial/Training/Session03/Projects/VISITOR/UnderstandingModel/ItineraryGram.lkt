/*******************************
 ** GRAMMAR
 *******************************
 ** Itinerary
 ** 	Site
 *******************************/

/*************************/
/** Itinerary		**/
/*************************/

(RItinerary1 : 
	[Itinerary/0 -> Site/5]
		{ ^.Site <- #1; } 
	)

(RItinerary2 : 
	[Itinerary/0 -> Origin/5]
		{ ^.Origin <- #1; } 
	)

(RItinerary3 : 
	[Itinerary/0 -> Destination/5]
		{ ^.Destination <- #1; } 
	)

(RItinerary4 : 
	[Itinerary/1 -> auxItinerary Itinerary/1 ]
		{ ^ <- #2; } 
	)

(RItinerary4 : 
	[Itinerary/2 -> lexAuxPrepENTRE? Itinerary/1 <lexAuxPrepDE|lexAuxPrepDEL|conjY>? Itinerary/2 ]
		{ ^ <- #2;
		  if (^ =:= #4) {
			  ^ <OW< #4; 
		  } else {
			if (^.Site =:= #4.Site) {
				^.Site <OW< #4.Site;
			} else {
				^.Origin.Site <- #2.Site;
				^.Destination.Site <- #4.Site;
				Erase(^.Site);
			}
			if (^.Origin =:= #4.Origin) {
				^.Origin <OW< #4.Origin;
			} else {
				^.Origin <- #4.Origin;
			}
			if (^.Destination =:= #4.Destination) {
				^.Destination <OW< #4.Destination;
			} else {
				^.Destination <- #4.Destination;
			}
		  }
		  if (^.Site) {
			if (^.Destination) {
				if (^.Destination.Site.SiteNode =:= ^.Site.SiteNode) { 
					if (VectorSize(^.Destination.Site.SiteNode) > 
							VectorSize(^.Site.SiteNode)) {
						^.Destination.Site <- ^.Site;
					} 
					Erase(^.Site);
				}
			} 
			if (^.Origin) {
				if (^.Origin.Site.SiteNode =:= ^.Site.SiteNode) { 
					if (VectorSize(^.Origin.Site.SiteNode) > 
							VectorSize(^.Site.SiteNode)) {
						^.Origin.Site <- ^.Site;
					} 
					Erase(^.Site);
				}
			}
		  }
		  if (^.Site) {
			if (^.Destination) {
				if (^.Origin) {
					Erase(^.Site);
				} else {
					^.Origin.Site <- ^.Site;
					Erase(^.Site);
				}
			} else {
				if (^.Origin) {
					^.Destination.Site <- ^.Site;
					Erase(^.Site);
				}
			}
		  }
		}
	)

/*************************/
/** Site		**/
/*************************/

(RSite1 : 
	[Site/0 -> lexSiteNode]
		{ ^.SiteNode <- #1; }
	)

(RSite3 : 
	[Site/0 -> lexSiteDesc <lexAuxPrepDE|lexAuxPrepDEL>? Site/0]
		{ ^ <- #3; 
		  ^.SiteDesc <OW< #1; } 
	)

(RSite2 : 
	[Site/1 -> Site/0 
			< punctColon | punctComma | punctDot | punctSemicolon > ]
		{ ^ <- #1; }
	)

(RSite4 : 
	[Site/2 -> Site/2 
			<lexAuxPrepDE|lexAuxPrepDEL|lexAuxPrepEN> 
			Site/1]
		{ if (#1.SiteNode =!= #3.SiteNode) { 
			Fail(); 
		  }
		  if (VectorSize(#1.SiteNode) < VectorSize(#3.SiteNode)) {
			^ <- #1;
			^.SiteDesc <OW< #3.SiteDesc; 
		  } else {
			^ <- #3;
			^.SiteDesc <OW< #1.SiteDesc; 
		  }
		}
	)

/*************************/
/** Origin		**/
/*************************/

(ROrigin1 : 
	[Origin -> lexAuxPrepCON? auxSiteDepart <lexAuxPrepDE|lexAuxPrepDESDE|lexAuxPrepDEL> Site/5]
		{ ^.Site <- #4; })

(ROrigin3 : 
	[Origin -> auxSiteArrival <lexAuxPrepDE|lexAuxPrepDESDE|lexAuxPrepDEL> Site/5]
		{ ^.Site <- #3; })

/*************************/
/** Destination		**/
/*************************/

(RDestination1 : 
	[Destination -> lexAuxPrepCON? auxSiteArrival <lexAuxPrepA|lexAuxPrepAL|lexAuxPrepHACIA|lexAuxPrepHASTA|lexAuxPrepPARA> Site/5]
		{ ^.Site <- #4; })

(RDestination3 : 
	[Destination -> auxSiteDepart <lexAuxPrepA|lexAuxPrepAL|lexAuxPrepHACIA|lexAuxPrepHASTA|lexAuxPrepPARA> Site/5]
		{ ^.Site <- #3; })
