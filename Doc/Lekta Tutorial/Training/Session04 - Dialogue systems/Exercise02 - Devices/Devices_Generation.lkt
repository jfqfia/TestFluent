/***************************************************************************

 ***************************************************************************/

(ScriboScheme GenerateWelcome: [ Answer ]
	ScriboCapture 
	{
		#OBJLOCUTIO-1.AnswerType == 'welcome'
        }
	ScriboAction 
	{
		SetMainAnswer("Welcome to your domotics personal assistant. You can control next devices: Irrigation, heating, alarm or light. ");
	}
)

(ScriboScheme GenerateAskTask: [ Answer ]
	ScriboCapture 
	{
		#OBJLOCUTIO-1.AnswerType == 'askTask'
        }
	ScriboAction 
	{
		SetMainAnswer("How may I help you?");
	}
)

(ScriboScheme GenerateApologize: [ Answer ]
	ScriboCapture 
	{
		#OBJLOCUTIO-1.AnswerType == 'apologize'
        }
	ScriboAction 
	{
		SetMainAnswer("Sorry, I donÂ´t understand you. ");
	}
)

(ScriboScheme GenerateNoChangingState: [ Answer ]
	ScriboCapture 
	{
		#OBJLOCUTIO-1.AnswerType == 'noChangedState'
        }
	ScriboAction 
	{
		string device <- ShapeToLiteral(#OBJLOCUTIO-1.Scope);
		string state <- 'activated';
		if( !! GetState(#OBJLOCUTIO-1.Scope) ) 
		{
			state <- 'deactivated';
		}

		SetMainAnswer("The ");
		SetMainAnswer(device);
		SetMainAnswer(" was ");
		SetMainAnswer(state);
		SetMainAnswer(" and it remains ");
		SetMainAnswer(state);
		SetMainAnswer(". ");
	}
)

(ScriboScheme GenerateChangingState: [ Answer ]
	ScriboCapture 
	{
		#OBJLOCUTIO-1.AnswerType == 'changedState'
        }
	ScriboAction 
	{
		string device <- ShapeToLiteral(#OBJLOCUTIO-1.Scope);
		string state <- 'activated';
		if( !! GetState(#OBJLOCUTIO-1.Scope) ) 
		{
			state <- 'deactivated';
		}

		SetMainAnswer("The ");
		SetMainAnswer(device);
		SetMainAnswer(" is now ");
		SetMainAnswer(state);
		SetMainAnswer(". ");
	}
)


(ScriboScheme GenerateBye: [ Answer ]
	ScriboCapture 
	{
		#OBJLOCUTIO-1.AnswerType == 'bye'
        }
	ScriboAction 
	{
		SetMainAnswer("Thank you for being there! See you soon. ");
	}
)

