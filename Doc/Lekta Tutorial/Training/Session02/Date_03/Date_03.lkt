/***************************************************************************
 * SOURCEFILE => Data_03.lkt
 ***************************************************************************/

lektaProject

	projectHead
		projectDescriptor       : "Date_03"
		projectLanguageScope    : [ es ]
		projectOperationScope   : [ test ]
		projectInterfaceScope   : [ dialogue ]
		projectCompileOutput    : ".Date_03.olk"

	projectSetup
		setupParserRoots = Command 

	classModel
		classDef:ElementBool (boolean)
		classDef:ElementInt (integer)
		classDef:ElementLiteral (string)
		classDef:ElementRange ( askInfo: 
			{ 'date', 'day', 'hour'} )
		classDef:StructureComplex ( askCommand, Command : (askInfo) )
		classDef:StructureBatch ( Commands : (Command ) )
		classDef:StructureComplex ( Task : ( Commands ) )

	lexicalModel forLanguage es
		("dime el día",   askCommand,      (askInfo:'day'))
		("dime la hora",  askCommand,      (askInfo:'hour'))
		("dime la fecha",  askCommand,     (askInfo:'date'))

	grammaticalModel forLanguage es
		(R1: [ Command -> askCommand ]
			{ ^ <- #1; } )

	conversationalModel
		MindBoardStructure: {
			(Mind / Task)
		}

		SensoSchemata
			(SensoScheme SenseCommand : [Command]
				SensoAction {
					BatchInsertEnd($MINDBOARD@Mind.Commands, #OBJSENSO-1);
				}
			)

		RespondoSchemata
			(RespondoScheme DS: [Command]
				RespondoCapture {
					(BatchSize($MINDBOARD@Mind.Commands) > 0)
				}
				RespondoAction {
					Command command;
					BatchExtractInit($MINDBOARD@Mind.Commands,command);
					^OBJRESPONDO <- command;
					RespondoRetry();
				}
			)

	functionModel
		string monthName (integer month) {
			switch (month) {
				case 1 return 'enero';
				case 2 return 'febrero';
				case 3 return 'marzo';
				case 4 return 'abril';
				case 5 return 'mayo';
				case 6 return 'junio';
				case 7 return 'julio';
				case 8 return 'agosto';
				case 9 return 'septiembre';
				case 10 return 'octubre';
				case 11 return 'noviembre';
				case 12 return 'diciembre';
			}
		}

		string weekdayName (integer day) {
			switch (day) {
				case 1 return 'lunes';
				case 2 return 'martes';
				case 3 return 'miercoles';
				case 4 return 'jueves';
				case 5 return 'viernes';
				case 6 return 'sabado';
				case 7 return 'domingo';
			}
		}

		string timeExact (integer hour, integer minute, integer second) {
			boolean am;
			string time;

			if (hour > 12) {
				am <- False;
				hour -= 12;
			} else {
				am <- True;
			}

			if (hour == 1) {
				time <- 'Es la 1 ';
			} else {
				time <- 'Son las ';
				time <- LiteralConcat(time,ShapeToLiteral(hour));
				time <- LiteralConcat(time,' ');
			}

			if (am) {
				time <- LiteralConcat(time,' de la mañana, ');
			} else {
				if (hour < 10)
					time <- LiteralConcat(time,' de la tarde, ');
				else
					time <- LiteralConcat(time,' de la noche, ');
			}

			time <- LiteralConcat(time,ShapeToLiteral(minute));
			time <- LiteralConcat(time,' minutos y ');
			time <- LiteralConcat(time,ShapeToLiteral(second));
			time <- LiteralConcat(time,' segundos.');

			return time;
		}


	scriboModel forLanguage es
		ScriboSchemata
			(ScriboScheme Command: [Command]
				ScriboCapture {
					#OBJLOCUTIO-1 == (askInfo:'day')
				}
				ScriboAction {
					SetMainAnswer("Es el día ");
					SetMainAnswer(ClockAskDayOfTheMonth());
					SetMainAnswer(". ");
				}
			)

			(ScriboScheme Command: [Command]
				ScriboCapture {
					#OBJLOCUTIO-1 == (askInfo:'hour')
				}
				ScriboAction {
					SetMainAnswer("Son las ");
					SetMainAnswer(ClockAskHour());
					SetMainAnswer(":");
					SetMainAnswer(ClockAskMinute());
					SetMainAnswer(". ");
				}
			)

			(ScriboScheme Command: [Command]
				ScriboCapture {
					#OBJLOCUTIO-1 == (askInfo:'date')
				}
				ScriboAction {
					SetMainAnswer("Hoy es el ");
					SetMainAnswer(ClockAskDayOfTheMonth());
					SetMainAnswer(" ");
					SetMainAnswer(monthName(ClockAskMonth()));
					SetMainAnswer(" de ");
					SetMainAnswer(ClockAskYear());
					SetMainAnswer(". Es ");
					SetMainAnswer(weekdayName(ClockAskDayOfTheWeek()));
					SetMainAnswer(". ");
					SetMainAnswer(timeExact(
							ClockAskHour(),
							ClockAskMinute(),
							ClockAskSecond()));
				}
			)

