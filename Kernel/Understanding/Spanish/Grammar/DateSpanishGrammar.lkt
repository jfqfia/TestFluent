// **************************************************
//
//	Rules for dates in spanish.
//
// **************************************************
// 
//	PROJECT	:	Fluency
//	MODULE  :	Kernel
//	PACKAGE	:	Understanding.Spanish.Grammar
//	FILE	:	DateSpanishGrammar.lkt
// 
// **************************************************

(DateRule01 :
    	[ DialogueAct -> DialogueDate ] 
	{
		^.CoreDialogueAct.Dimension <- 'inform';
		^.SemanticContent.DialogueDate <- #1;
    	}
)

(DateRule02_1 :
    	[ DialogueDate -> OffsetDate ] 
	{
		^.OffsetDate <- #1;
	}
)

(DateRule02_2 :
    	[ DialogueDate -> BaseDate ] 
	{
		^.BaseDate <- #1;
	}
)

// hoy
// mañana
// ayer
// después de hoy
// después de mañana
// pasado mañana
// pasado hoy
// el día de hoy
// el día después de hoy
// el día después de mañana
(DateRule03 :
    	[ OffsetDate -> lexTemporalModifier? lexOffsetDay ] 
	{
		if(#1)
		{
			^.Day <- #1 + #2;
			^.DayInWeek <- 0;	
			^.Week <- 0;
			^.Month <- 0;
			^.Year <- 0;
		}
		else
		{
			^.Day <- #2;
			^.DayInWeek <- 0;
			^.Week <- 0;
			^.Month <- 0;
			^.Year <- 0;
		}
    	}
)

// en 4 días
(DateRule04_1 :
    	[ OffsetDate -> lexPrepPlace? lexNumberDigits lexDay ] 
	{
		^.Day <- #2;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// en 2 semanas
(DateRule04_2 :
    	[ OffsetDate -> lexPrepPlace? lexNumberDigits lexWeek ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- #2;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// en 3 meses
(DateRule04_3 :
    	[ OffsetDate -> lexPrepPlace? lexNumberDigits lexMonth ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- #2;
		^.Year <- 0;
    	}
)

// en 5 años
(DateRule04_4 :
    	[ OffsetDate -> lexPrepPlace? lexNumberDigits lexYear ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- #2;
    	}
)

// el próximo día
// el siguiente día
(DateRule05_1_1 :
    	[ OffsetDate -> lexTemporalModifier lexDay ] 
	{
		^.Day <- #1;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// al día siguiente
(DateRule05_1_2 :
    	[ OffsetDate -> lexDay lexTemporalModifier ] 
	{
		^.Day <- #2;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// la siguiente semana
(DateRule05_2_1 :
    	[ OffsetDate -> lexTemporalModifier lexWeek ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- #1;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// la semana siguiente
// la semana que viene
(DateRule05_2_2 :
    	[ OffsetDate -> lexWeek lexTemporalModifier ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- #2;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// el siguiente mes 
(DateRule05_3_1 :
    	[ OffsetDate -> lexTemporalModifier lexMonth ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- #1;
		^.Year <- 0;
    	}
)

// el mes que viene 
// el mes siguiente
(DateRule05_3_2 :
    	[ OffsetDate -> lexMonth lexTemporalModifier ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- #2;
		^.Year <- 0;
    	}
)

// el siguiente año
(DateRule05_4_1 :
    	[ OffsetDate -> lexTemporalModifier lexYear ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- #1;
    	}
)

// el año siguiente
// el año que viene
(DateRule05_4_2 :
    	[ OffsetDate -> lexYear lexTemporalModifier ] 
	{
		^.Day <- 0;
		^.DayInWeek <- 0;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- #2;
    	}
)

// a partir de hoy
// a partir de mañana
// desde mañana
(DateRule06_1 :
    	[ OffsetDate -> lexPrepFrom OffsetDate ] 
	{
		^ <- #2;
    	}
)

// desde el 25 de agosto
(DateRule06_2 :
    	[ BaseDate -> lexPrepFrom BaseDate ] 
	{
		^ <- #2;
    	}
)

// el siguiente día desde mañana
// el siguiente día a partir de mañana
// el lunes de la semana que viene
(DateRule07 :
    	[ OffsetDate/1 -> OffsetDate/1 lexPrepOf? OffsetDate/0 ] 
	{
		^.Day <- #1.Day + #3.Day;
		^.DayInWeek <- #1.DayInWeek + #3.DayInWeek;
		^.Week <- #1.Week + #3.Week;
		^.Month <- #1.Month + #3.Month;
		^.Year <- #1.Year + #3.Year;
    	}
)

// hace 2 días
// dentro de 5 años
(DateRule08 :
    	[ OffsetDate -> lexMetaTemporalModifier OffsetDate ] 
	{
		^.Day <- #2.Day * #1;
		^.DayInWeek <- #2.DayInWeek;
		^.Week <- #2.Week * #1;
		^.Month <- #2.Month * #1;
		^.Year <- #2.Year * #1;
    	}
)


// después de la siguiente semana 
// después de un par de semanas
// el día siguiente después de pasado mañana
(DateRule09 :
    	[ OffsetDate -> lexTemporalModifier OffsetDate ] 
	{
		^ <- #2;
		if(#2.Day != 0)
		{
			^.Day <- #1 + #2.Day;
		}
		else if(#2.Week != 0)
		{
			^.Week <- #1 + #2.Week;
		}
		else if(#2.Month != 0)
		{
			^.Month <- #1 + #2.Month;
		}
		else if(#2.Year != 0)
		{
			^.Year <- #1 + #2.Year;
		}
		else
		{
			^.Day <- #1 + #2.Day;
		}
    	}
)

// el próximo lunes
// el siguiente lunes
(DateRule10_1 :
    	[ OffsetDate -> lexTemporalModifier lexDayInWeek ] 
	{
		^.Day <- #1;
		^.DayInWeek <- #2;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// este lunes
// el lunes
// el lunes que viene
(DateRule10_2 :
    	[ OffsetDate -> < lexDetThis | lexDetThe > lexDayInWeek ] 
	{
		^.Day <- 1;
		^.DayInWeek <- #2;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- 0;
    	}
)


// dentro de 2 lunes
// hace 3 martes
(DateRule11 :
    	[ OffsetDate -> lexPrepPlace? lexNumberDigits lexDayInWeek ] 
	{
		^.Day <- #2;
		^.DayInWeek <- #3;
		^.Week <- 0;
		^.Month <- 0;
		^.Year <- 0;
    	}
)

// el 1 de agosto de 2016
// el 1 de agosto del 2016
// el 1 de agosto
// 1 de agosto de 2016
// 1 de agosto del 2016
// 1 de agosto
(DateRule13 :
	[ BaseDate -> lexDetThe? lexNumberDigits lexPrepOf? lexBaseMonth lexPrepOf? lexNumberDigits? ]
	{
	        ^.Day <- #2;
        	^.Month <- #4;
        	^.Year <- #6;
    	}
)

// en marzo de 2010
// marzo de 2010
// marzo 2010
// en marzo 2010
(DateRule14 :
	[ BaseDate -> lexPrepPlace? lexBaseMonth lexPrepOf? lexNumberDigits?]
	{
		^.Month <- #2;
		^.Year <- #4;
	}
)

// pasado el 1 de marzo de 2017
(DateRule15 :
	[ DialogueDate -> lexTemporalModifier BaseDate ]
	{
		^.BaseDate <- #2;
		if(#2.Day)
		{
			^.OffsetDate.Day <- #1;	
			^.OffsetDate.DayInWeek <- 0;
			^.OffsetDate.Month <- 0;
			^.OffsetDate.Year <- 0;				
		}
	}
)

// pasado el mes marzo
// pasado el mes de marzo
// pasado el mes de marzo de 2010
(DateRule16 :
	[ DialogueDate -> OffsetDate lexPrepOf? BaseDate ]
	{
		^.OffsetDate <- #1;
		^.BaseDate <- #3;
	}
)


