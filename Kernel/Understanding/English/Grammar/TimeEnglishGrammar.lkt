// **************************************************
//
//	Rules for times in english.
//
// **************************************************
// 
//	PROJECT	:	Fluency
//	MODULE  :	Kernel
//	PACKAGE	:	Understanding.English.Grammar
//	FILE	:	TimeEnglishGrammar.lkt
// 
// **************************************************

(TimeRule01 :
    	[ DialogueAct -> DialogueTime ] 
	{
		^.CoreDialogueAct.Dimension <- 'inform';
		^.SemanticContent.DialogueTime <- #1;
    	}
)

(TimeRule02_1 :
    	[ DialogueTime -> OffsetTime ] 
	{
		^.OffsetTime <- #1;
	}
)

(TimeRule02_2 :
    	[ DialogueTime -> BaseTime ] 
	{
		^.BaseTime <- #1;
	}
)

// in 10 seconds
(TimeRule03_1 :
    	[ OffsetTime -> lexPrepPlace? lexNumberDigits lexSecond ] 
	{
		^.Hour <- 0;
		^.Minute <- 0;
		^.Second <- #2;
    	}
)

// in 5 minutes
(TimeRule03_2 :
    	[ OffsetTime -> lexPrepPlace? lexNumberDigits lexMinute ] 
	{
		^.Hour <- 0;
		^.Minute <- #2;
		^.Second <- 0;
    	}
)

// in 3 hours
(TimeRule03_3 :
    	[ OffsetTime -> lexPrepPlace? lexNumberDigits lexHour ] 
	{
		^.Hour <- #2;
		^.Minute <- 0;
		^.Second <- 0;
    	}
)

// 10 minutes ago
(TimeRule04 :
    	[ OffsetTime -> OffsetTime lexMetaTemporalModifier ] 
	{
		^.PartOfTheDay <- #1.PartOfTheDay;
		^.Hour <- #1.Hour * #2;
		^.Minute <- #1.Minute * #2;
		^.Second <- #1.Second * #2;
    	}
)

// at hh:mm
(TimeRule05 :
    	[ BaseTime -> lexPrepAt? lexNumberDigits colon lexNumberDigits lexAM?] 
	{
		if(#2 < 24 && #4 < 60)
		{
			^.Hour <- #2;
			^.Minute <- #4;
		}
		else	
		{
			Fail();	
		}
    	}
)

// at hh:mm:ss
(TimeRule06 :
    	[ BaseTime -> lexPrepAt? lexNumberDigits colon lexNumberDigits colon lexNumberDigits lexAM?] 
	{
		if(#2 < 24 && #4 < 60 && #6 < 60)
		{
			^.Hour <- #2;
			^.Minute <- #4;
			^.Second <- #6;
		}
		else
		{
			Fail();
		}
    	}
)

// at hh:mm pm
// at hh:mm:ss pm
(TimeRule07 :
    	[ BaseTime -> BaseTime lexPM] 
	{
		^ <- #1;
		if(^.Hour < 12)
		{
			^.Hour <- ^.Hour + 12;
		}
    	}
)

// At 10 o'clock
// 12 o'clock
(TimeRule08 :
    	[ BaseTime -> lexPrepAt? lexNumberDigits lexBaseMinute] 
	{
		if(#2 < 24)
		{
			^.Hour <- #2;
			^.Minute <- #3;
		}
		else
		{		
			Fail();
		}
    	}
)

// Quarter past 9
// A quarter to 9
// half past 9
(TimeRule09 :
    	[ BaseTime -> lexPrepAt? lexDetUndef? lexBaseMinute lexNumberDigits] 
	{
		if(#4 < 24)
		{
			^.Minute <- #3;
			if(#3 == 45)
			{
				^.Hour <- #4 - 1;
			}
			else
			{
				^.Hour <- #4;
			}	
		}
		else
		{
			Fail();
		}
    	}
)

// Memory error in lekta engine. If you uncomment this you will get a double free error.
/*
(TimeRule10_1 :
	[ BaseTime -> lexPM ]
	{	
		^.PartOfTheDay.PartOfTheDayName <- 'afternoon'; 
	}
)

// in the morning
(TimeRule10_2 :
	[ BaseTime -> lexAM ]
	{	
		^.PartOfTheDay.PartOfTheDayName <- 'morning'; 
	}
)
*/

// at noon
// noon
// in the evening
// at night
// in the morning
(TimeRule11 :
	[ BaseTime -> lexPrepAt? lexPrepPlace? lexDetThe? lexPartOfTheDay ]
	{	
		^.PartOfTheDay.PartOfTheDayName <- #4; 
	}
)

// late in the evening
// in the middle of the night
// in the middle of the afternoon
(TimeRule12_1 :
	[ BaseTime -> lexTemporalModifierForPartOfTheDay lexPrepAt? lexPrepPlace? lexDetThe? lexPartOfTheDay ]
	{	
		^.PartOfTheDay.PartOfTheDayName <- #5;
		^.PartOfTheDay.PartOfTheDayInterval <- #1;  
	}
)

