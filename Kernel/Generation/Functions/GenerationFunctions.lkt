// ****************************************************************************
//
//	Generic functions used in Natural Language Generation stage
//
// ****************************************************************************
//
//	PROJECT	: Fluency
// 	DOMAIN  : Kernel
//	MODULE  : Generation
//	PACKAGE	: Functions
// 	FOLDER  : -
// 	FILE	: GenerationFunctions
//
// ****************************************************************************

bool containsActionDomain( Action actionBatch, ActionDomain actionDomainToSearch )
{
	int size;
	int position;
	ActionDomain recoveredActionDomain;

	size <- BatchSize( actionBatch );
	for( position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( actionBatch, position, recoveredActionDomain );
		if( recoveredActionDomain == actionDomainToSearch )
		{
			return True;
		}
	}

	return False;
}

bool parametersContainsParameterType ( Parameters parameters, ParameterType parameterType )
{
	int size;
	int position;
	Parameter parameter;

	size <- BatchSize( parameters );
	for( position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( parameters, position, parameter );		
		if( parameter.ParameterType == parameterType )
		{
			return True;
		}
	}

	return False;
}

Parameter parametersRecoverParameterType ( Parameters parameters, ParameterType parameterType )
{
	int size;
	int position;
	Parameter parameter, emptyParameter;

	size <- BatchSize( parameters );
	for( position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( parameters, position, parameter );		
		if( parameter.ParameterType == parameterType )
		{
			return parameter;
		}
	}

	return emptyParameter;
}


