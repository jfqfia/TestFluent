// ****************************************************************************
//
//	Functions in SignChunk parameter
//
// ****************************************************************************
//
//	PROJECT	: Fluency
// 	DOMAIN  : Kernel
//	MODULE  : SignChunk
//	PACKAGE	: Functions
// 	FOLDER  : -
// 	FILE	: SignChunkFunctions
//
// ****************************************************************************


bool canMergeWithSequentialSignChunk(Parameter parameter1, Parameter parameter2)
{
	return True;
}

bool canMergeWithOrSignChunk(Parameter parameter1, Parameter parameter2)
{
	return True;
}

bool canMergeWithAndSignChunk(Parameter parameter1, Parameter parameter2)
{
	return True;
}

string getConcatenatedSignChunk( Parameter parameter )
{
	if( parameter.ParameterCategory == 'terminal' )
	{
		return parameter.ParameterValue.SignChunk.SignChunkLiteral;
	}
	else
	{
		string ret;

		ret <- getConcatenatedSignChunk( parameter.ParameterOperand1 );
		ret <- LiteralConcat( ret, getConcatenatedSignChunk ( parameter.ParameterOperand2 ) );
		return ret;
	}
}

