// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

(CogitoScheme BootingDialogue :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'booting_dialogue' )
	}
	CogitoAction 
	{
		// Some Tests on <& operand
		/*
		CoreDialogueAct c1,c2;


		c1.Dimension <- 'social';
		c1.Function <- 'goodbye';
		c2.Dimension <- 'social';
		//c2.Function <- 'greeting';
		c1 <& c2; 

		if(Devoid(c1))
		{
			SpyMessage("c1 vacÃ­a");
		}
		else
		{
			SpyMessage("c1: ", c1);
			SpyMessage("Dim c1: ", c1.Dimension);
			SpyMessage("Fun c1: ", c1.Function);
		}
		*/

		SpyMessage("$$>> CogitoScheme (Start): BootingDialogue");

		createDialogueScheme();

		initMindBoard();

		initDialogueScheme();

	        $MINDBOARD@DialogueState.DialoguePhase <- 'start_talking';

		displayMindBoard();

		SpyMessage("$$>> CogitoScheme (End): BootingDialogue");
	}
)

(CogitoScheme StartTalking :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'start_talking' )
	}
	CogitoAction 
	{
		SpyMessage("$$>> CogitoScheme (Start): StartTalking");

		displayMindBoardInput();

		startTalkingTurn();

		// digestDialogueInput();
		
	        $MINDBOARD@DialogueState.DialoguePhase <- 'process_talking';

		SpyMessage("$$>> CogitoScheme (End): StartTalking");
	}
)

(CogitoScheme ProcessTalkingTell :
	CogitoCapture 
	{
		$MINDBOARD@DialogueState.DialoguePhase == 'process_talking' &&
		$MINDBOARD@CurrentNode.ScriptNodeType == 'tell'
	}
	CogitoAction 
	{
		SpyMessage("$$>> CogitoScheme (Start): ProcessTalking / Tell");

		displayMindBoard();

		// assignCurrentNodeToDialogueOutput();

		// advanceNodeInScript();

	
		BatchInsertEnd( $MINDBOARD@DialogueOutput.DialogueActs, $MINDBOARD@CurrentNode.ScriptNodeContent.DialogueAct );

		if( $MINDBOARD@CurrentNode.ScriptNodeContent.DialogueAct.TaskDialogueAct.Scope == 'hmihy' )
		{
			$MINDBOARD@CurrentNode.ScriptNodeType <- 'wait' ;
		}
		else
		{
			// advanceNodeInScript();
		}
	        // $MINDBOARD@DialogueState.DialoguePhase <- 'closeTalking';

		SpyMessage("$$>> CogitoScheme (End): ProcessTalking / Tell");

		CogitoRetry();
	}
)

(CogitoScheme ProcessTalkingSafety :
	CogitoCapture 
	{
        	$MINDBOARD@DialogueState.DialoguePhase == 'process_talking'
	}
	CogitoAction 
	{
		// SpyMessage("$$>> CogitoScheme (Start): ProcessTalking / Safety");

	        $MINDBOARD@DialogueState.DialoguePhase <- 'close_talking';

		// SpyMessage("$$>> CogitoScheme (End): ProcessTalking / Safety");
	}
)

(CogitoScheme CloseTalking :
	CogitoCapture 
	{
        	$MINDBOARD@DialogueState.DialoguePhase == 'close_talking'
	}
	CogitoAction 
	{
		// SpyMessage("$$>> CogitoScheme (Start): CloseTalking");

		displayMindBoardOutput();

		closeTalkingTurn();

	        $MINDBOARD@DialogueState.DialoguePhase <- 'start_talking';

		CogitoQuit();

		// SpyMessage("$$>> CogitoScheme (End): CloseTalking");
	}
)

