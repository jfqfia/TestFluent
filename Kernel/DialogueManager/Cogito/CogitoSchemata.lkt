// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

(CogitoScheme BootingDialogue :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'booting_dialogue' )
	}
	CogitoAction 
	{
		createDialogueScheme();
		initMindBoard();
		initDialogueScheme();
	        $MINDBOARD@DialogueState.DialoguePhase <- 'start_talking';
	}
)

(CogitoScheme StartTalking :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'start_talking' )
	}
	CogitoAction 
	{
		startTalkingTurn();
	        $MINDBOARD@DialogueState.DialoguePhase <- 'digest_dialogue_input';
	}
)

(CogitoScheme DigestDialogueInput :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'digest_dialogue_input' )
	}
	CogitoAction 
	{
		// digestDialogueInput();
		$MINDBOARD@DialogueState.DialoguePhase <- 'activate_scripts';
	}
)

(CogitoScheme ActivateScripts :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'activate_scripts' )
	}
	CogitoAction 
	{
		activateScripts();
		$MINDBOARD@DialogueState.DialoguePhase <- 'select_current_node';
	}
)

(CogitoScheme SelectCurrentNode :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'select_current_node' )
	}
	CogitoAction 
	{
		SpyMessage("$$>> CogitoScheme: select_current_node");
		selectCurrentNode();
		$MINDBOARD@DialogueState.DialoguePhase <- 'process_talking';
	}
)

(CogitoScheme ProcessTalkingTell :
	CogitoCapture 
	{
		$MINDBOARD@DialogueState.DialoguePhase == 'process_talking' &&
		getTypeFromCurrentNodeFromCurrentDialogueScript() == 'tell'
	}
	CogitoAction 
	{
		SpyMessage("$$>> CogitoScheme: process_talking_tell");
		processTellNode();
	        $MINDBOARD@DialogueState.DialoguePhase <- 'close_talking';
	        //$MINDBOARD@DialogueState.DialoguePhase <- 'select_current_node';
		CogitoRetry();
	}
)

(CogitoScheme ProcessTalkingSafety :
	CogitoCapture 
	{
        	$MINDBOARD@DialogueState.DialoguePhase == 'process_talking'
	}
	CogitoAction 
	{
		SpyMessage("$$>> CogitoScheme Safety");
		displayMindBoard();

	        $MINDBOARD@DialogueState.DialoguePhase <- 'close_talking';
	}
)

(CogitoScheme CloseTalking :
	CogitoCapture 
	{
        	$MINDBOARD@DialogueState.DialoguePhase == 'close_talking'
	}
	CogitoAction 
	{
		closeTalkingTurn();
	        $MINDBOARD@DialogueState.DialoguePhase <- 'start_talking';
		CogitoQuit();
	}
)
