// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

(CogitoScheme Booting :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'booting' )
	}
	CogitoAction 
	{
		ProferenceChunks emptyProferenceChunks;
		DialogueActs emptyDialogueActs;

		$MINDBOARD@DialogueScheme <- createDialogueScheme();
		$MINDBOARD@DialogueInput.ProferenceChunks <- emptyProferenceChunks;
		$MINDBOARD@DialogueOutput.DialogueActs <- emptyDialogueActs;

		$MINDBOARD@CurrentScript <- selectDialogueScript( 'Manager' );
		$MINDBOARD@CurrentNode <- selectInitialScriptNode( $MINDBOARD@CurrentScript );
	        $MINDBOARD@DialogueState.DialoguePhase <- 'talking';

		/*
		cleanFocus();
		nextDialogueMove();
		generateFocusDMoves();
		//closeCogitoTalkingTurn();
		//showMindBoard();
        	//CogitoQuit();
		*/
	}
)

(CogitoScheme Talking :
	CogitoCapture 
	{
        	( $MINDBOARD@DialogueState.DialoguePhase == 'talking' )
	}
	CogitoAction 
	{
		if( $MINDBOARD@CurrentNode.ScriptNodeType == 'tell' )
		{
			BatchInsertEnd( $MINDBOARD@DialogueOutput.DialogueActs, $MINDBOARD@CurrentNode.ScriptNodeContent.DialogueAct );
			SpyMessage("$$>> COGITO: CurrentNode - tell: ", $MINDBOARD@CurrentNode);
			// Pasar al siguiente nodo
		}
	/*
	initCogitoTalkingTurn();

	showMindBoard();

	cleanFocus();

	interpretScheme();

	analyzeScript();

	nextDialogueMove();

	generateFocusDMoves();

	closeCogitoTalkingTurn();

        if ( $MINDBOARD@DMSetup.DMPhase == 'dmClosing' )  {
		CloseDialogue();
	}

	showMindBoard();
	*/
	}
)

(CogitoScheme CogitoScheme_Closing :
    	CogitoCapture 
	{
	        ( $MINDBOARD@DialogueState.DialoguePhase == 'closing' )
    	}
    	CogitoAction 
	{
    		CloseDialogue();
    	}
)

