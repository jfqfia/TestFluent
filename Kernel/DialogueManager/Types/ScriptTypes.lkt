// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

classDef:StructureComplex 
(
	DialogueScheme : 
	(
		DialogueSchemeDescriptor,
		DialogueScripts
	)
)

classDef:ElementLiteral 
(
	DialogueSchemeDescriptor
)

classDef:StructureBatch 
(
        DialogueScripts : 
	(
		DialogueScript
	)
)

classDef:StructureComplex 
(
	DialogueScript : 
	(
		ScriptDescriptor,
		ScriptNodes,
		DialogueTrigger,
		ActivatedScriptNodes,
		CurrentNodeDescriptor
	)
)

classDef:StructureBatch 
(
        ScriptNodes : 
	(
		ScriptNode
	)
)

classDef:ElementLiteral 
(
        ScriptDescriptor, CallingScriptDescriptor, ReturnParameter
)

classDef:Synonym
(
	DialogueTrigger = DialogueAct
)

classDef:StructureComplex 
(
	ScriptNode : 
	(
		ScriptNodeDescriptor,
		ScriptNodePreconditions,
		ScriptNodeType,
		ScriptNodeContent,
		ScriptNodeState,
		ScriptNodePostconditions
	)
)

classDef:StructureBatch
(
 	ActivatedScriptNodes :
	(
	 	ScriptNodeDescriptor
	)
)

classDef:ElementLiteral
(
	ScriptNodeDescriptor, CurrentNodeDescriptor
)

classDef:StructureBatch
(
	ScriptNodePreconditions :
	(
		DialogueActionPrecondition
	)
)

classDef:StructureBatch
(
	ScriptNodePostconditions :
	(
		DialogueAction
	)
)

classDef:StructureComplex
(
	DialogueActionPrecondition :
	(
		NegatedPrecondition,
		DialogueAction
	)
)

classDef:ElementBool
(
	NegatedPrecondition
)

classDef:StructureComplex
(
	DialogueAction :
	(
		DialogueActionName,
		DialogueActionArguments
	)
)

classDef:ElementRange 
(
        DialogueActionName : 
	{ 
		'empty_slot', 
		'pull_script', 
		'set_node_state', 
		'is_node_state'
	}
)

classDef:StructureBatch
(
	DialogueActionArguments :
	(
		DialogueActionArgument	
	)
)

classDef:ElementLiteral
(
	DialogueActionArgument
)

classDef:StructureComplex
(
	ScriptNodeState :
	(
		ScriptNodeCounter,
		ScriptNodeStateName
	)
)

classDef:ElementRange
(
	ScriptNodeStateName : 
	{
		'finalized'
	}
)

// TODO: ScriptNodeCounter not yet used.
// TODO: Where should I put grounding features?
classDef:ElementInt
(
	ScriptNodeCounter
)

classDef:ElementRange 
(
        ScriptNodeType : 
	{ 
		'tell', 
		'wait', 
		'execute'
	}
)

classDef:StructureComplex 
(
	ScriptNodeContent : 
	(
		DialogueAct
	)
)


