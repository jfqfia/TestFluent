// ******************************************************
//      Lekta Application
// ***************************
//      PROJECT :       Alter
//      MODULE  :       DManager/Library (Dialogue Scheme)
//      FILE    :       MindBoard.lkt
// ******************************************************

procedure initMindBoard()
{
	initMindBoardInput();
	initMindBoardOutput();
}

procedure initMindBoardInput()
{
	ProferenceChunks emptyProferenceChunks;
	$MINDBOARD@DialogueInput.ProferenceChunks <- emptyProferenceChunks;
}

procedure initMindBoardOutput()
{
	DialogueActs emptyDialogueActs;

	$MINDBOARD@DialogueOutput.DialogueActs <- emptyDialogueActs;
}

procedure resetMoveStates()
{
	DialogueScript script;
	int size;
	int position;
	ScriptInfoItem scriptInfoItem;

	script <- getCurrentScript();
	size <- BatchSize( script.ScriptInfoItems );

	for( position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition(script.ScriptInfoItems, position, scriptInfoItem);

		resetMoveState(script.ScriptDescriptor, position, scriptInfoItem );
	}
}

procedure resetMoveState(ScriptDescriptor scriptDescriptor, int position, ScriptInfoItem scriptInfoItem )
{
	Erase(scriptInfoItem.InfoItemMoveState);

	DialogueScript dialogueScript;
	ScriptInfoItems scriptInfoItems;

	dialogueScript <- getScript( scriptDescriptor );
	scriptInfoItems <- dialogueScript.ScriptInfoItems;
	BatchAssignPosition( scriptInfoItems, position, scriptInfoItem );
	dialogueScript.ScriptInfoItems <- scriptInfoItems;
	setScript( dialogueScript );
}

procedure displayMindBoard()
{
	DialogueScript dialogueScript;

	dialogueScript <- getCurrentScript();

	SpyMessage("$$==================================================");
	SpyMessage("$$  MindBoard ");
	SpyMessage("$$      CurrentScript: ", $MINDBOARD@DialogueState.CurrentScriptDescriptor );
	SpyMessage("$$      CurrentNode  : ", dialogueScript.CurrentNodeDescriptor );
	SpyMessage("$$==================================================");
}

procedure displayMindBoardInput()
{
	SpyMessage("$$==================================================");
	SpyMessage("$$  MindBoardInput ");
	SpyMessage($MINDBOARD@DialogueInput);
	SpyMessage("$$==================================================");
}

procedure displayMindBoardOutput()
{
	SpyMessage("$$==================================================");
	SpyMessage("$$  MindBoardOutput ");
	SpyMessage($MINDBOARD@DialogueOutput);
	SpyMessage("$$==================================================");
}
