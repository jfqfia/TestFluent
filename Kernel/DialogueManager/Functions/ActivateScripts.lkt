// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

DigestScheme selectMinScoreDigestScheme()
{
	DigestScheme minDigestScheme, recoveredDigestScheme;
	BatchRecoverPosition( $MINDBOARD@DialogueDigest.DigestSchemes, 1, minDigestScheme);
	int size <- BatchSize( $MINDBOARD@DialogueDigest.DigestSchemes);
	for( int position <- 2; position <= size; position++ )
	{
		BatchRecoverPosition( $MINDBOARD@DialogueDigest.DigestSchemes, position, recoveredDigestScheme);
		if( recoveredDigestScheme.DigestSchemeScore < minDigestScheme.DigestSchemeScore )
		{
			minDigestScheme <- recoveredDigestScheme;
		}
	}
	
	return minDigestScheme;
}

procedure filterDialogueDigest(bool currentFlag, bool activeFlag)
{
	if(oneWithScope())
	{
		while(oneWithoutScope())
		{
			DigestScheme digestScheme <- getFirstWithoutScope();
			removeDigestScheme( digestScheme );
		}
	}
	else
	{
		if( currentFlag || activeFlag )
		{
			DigestSchemes emptyDigestSchemes;
			$MINDBOARD@DialogueDigest.DigestSchemes <- emptyDigestSchemes;
		}
	}
}

bool hasScope(DigestScheme digestScheme)
{
	DigestChunk digestChunk;

	int size <- BatchSize( digestScheme.DigestChunks );
	for( int position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( digestScheme.DigestChunks, position, digestChunk );
		if( digestChunk.ScriptTriggerComponent == 'scope' )
		{
			return True;
		}
	}

	return False;	

}

bool oneWithScope()
{
	DigestScheme digestScheme;

	int size <- BatchSize( $MINDBOARD@DialogueDigest.DigestSchemes );
	for( int position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( $MINDBOARD@DialogueDigest.DigestSchemes, position, digestScheme );
		if( hasScope(digestScheme) )
		{
			return True;
		}
	}

	return False;	
}

bool oneWithoutScope()
{
	DigestScheme digestScheme;

	int size <- BatchSize( $MINDBOARD@DialogueDigest.DigestSchemes );
	for( int position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( $MINDBOARD@DialogueDigest.DigestSchemes, position, digestScheme );
		if( !! hasScope(digestScheme) )
		{
			return True;
		}
	}

	return False;	
}

DigestScheme getFirstWithoutScope()
{
	DigestScheme digestScheme, emptyDigestScheme;
	int size <- BatchSize( $MINDBOARD@DialogueDigest.DigestSchemes );
	for( int position <- 1; position <= size; position++ )
	{
		BatchRecoverPosition( $MINDBOARD@DialogueDigest.DigestSchemes, position, digestScheme );
		if( !! hasScope(digestScheme) )
		{
			return digestScheme;
		}
	}

	return emptyDigestScheme;	
}

procedure digestScriptInfo( DigestScheme digestScheme )
{
	// TODO
	SpyMessage("********************************************************");
	SpyMessage("digestScriptInfo");
	SpyMessage(digestScheme);
	SpyMessage("********************************************************");

	DigestChunks digestChunks;
	int digestSize;
	int digestPosition;
	DigestChunk digestChunk;

	digestChunks <- digestScheme.DigestChunks;
	digestSize <- BatchSize( digestChunks );

	for (digestPosition <- 1; digestPosition <= digestSize; digestPosition ++ ) {
		BatchRecoverPosition( digestChunks, digestPosition, digestChunk );

		switch (digestChunk.ScriptTriggerComponent) {
			case 'core' { 
				;
			}
			case 'action' {
				;
			}
			case 'scope' {
				;
			}
			case 'parameter' {
				SpyMessage("AQUI");
				SpyMessage(digestChunk.ProferenceChunk.Parameter.ParameterType);
				assignScriptInfoItemParameter( digestScheme.ScriptDescriptor,
						digestChunk.ProferenceChunk.Parameter );
			}
		}
	}
}

procedure assignScriptInfoItemParameter(ScriptDescriptor scriptDescriptor, Parameter parameter)
{
	DialogueScript dialogueScript;
	ScriptInfoItems scriptInfoItems;
	int infoSize;
	int infoPosition;
	bool infoFound;
	ScriptInfoItem scriptInfoItem;

	dialogueScript <- getScript( scriptDescriptor );

	scriptInfoItems <- dialogueScript.ScriptInfoItems;
	infoSize <- BatchSize( scriptInfoItems );
	infoFound <- False;

	for (infoPosition <- 1; (infoPosition <= infoSize && (!! infoFound)); infoPosition ++) 
	{
		BatchRecoverPosition( scriptInfoItems, infoPosition, scriptInfoItem );

		if (scriptInfoItem.InfoItemType == 'parameter') 
		{
			if (scriptInfoItem.InfoItemParameterType == parameter.ParameterType) 
			{
				infoFound <- True;

				// TODO
				//	Dependiendo del estado
				//

				if (scriptInfoItem.InfoItemState == 'empty') {
					scriptInfoItem.InfoItemValue.Parameter <- parameter;
					scriptInfoItem.InfoItemMoveState <- 'captured';

					BatchAssignPosition( scriptInfoItems, infoPosition, scriptInfoItem );
					dialogueScript.ScriptInfoItems <- scriptInfoItems;
				}
			}
		}
	}

	SpyMessage("**********************************************");
	SpyMessage("assignScriptInfoItemParameter");
	SpyMessage(dialogueScript);
	SpyMessage("**********************************************");
	setScript( dialogueScript );
}


