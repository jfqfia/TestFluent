// ****************************************************************************
//
//	Functions related with digesting expectatives stage in dialogue manager
//
// ****************************************************************************
//
//	PROJECT	: Fluency
// 	DOMAIN  : Kernel
//	MODULE  : DialogueManager
//	PACKAGE	: Functions
// 	FOLDER  : -
// 	FILE	: DigestExpectativesPhase
//
// ****************************************************************************

bool compatibleExpectativeTypesKernel(ParameterType type1, ParameterType type2)
{
	bool ret;

	ret <- False;

	if( type1 == 'moneyamount' && type2 == 'number' )
	{
		ret <- True;
	}
	if( type1 == 'phonenumber' && type2 == 'number' )
	{
		ret <- True;
	}

	return ret;
}

ProferenceChunk convertProferenceToExpectativeKernel(ParameterType typeTarget, ProferenceChunk originalProference)
{
	ProferenceChunk ret;

	if( typeTarget == 'phonenumber' && originalProference.Parameter.ParameterType == 'number' )
	{
		PhoneNumber phoneNumber <- convertNumberToPhoneNumber(originalProference.Parameter);
		ret.Parameter.ParameterValue.PhoneNumber <- phoneNumber;
		ret.Parameter.ParameterType <- 'phonenumber';
		ret.Parameter.ParameterCategory <- 'terminal';
		if( originalProference.Parameter.ParameterCategory == 'negation' )
		{
			ret.Parameter.ParameterCategory <- 'negation';
		}
	}	
	if( typeTarget == 'moneyamount' && originalProference.Parameter.ParameterType == 'number' )
	{
		MoneyAmount moneyAmount <- convertNumberToMoneyAmount(originalProference.Parameter);
		ret.Parameter.ParameterValue.MoneyAmount <- moneyAmount;
		ret.Parameter.ParameterType <- 'moneyamount';
		ret.Parameter.ParameterCategory <- 'terminal';
		if( originalProference.Parameter.ParameterCategory == 'negation' )
		{
			ret.Parameter.ParameterCategory <- 'negation';
		}
	}	
	
	return ret;
}

