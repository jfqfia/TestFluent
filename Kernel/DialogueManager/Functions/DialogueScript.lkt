// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

DialogueScript	createDialogueScriptManager()
{
	DialogueScript dialogueScript;

	ScriptNode nodeWelcome;
	ScriptNode nodeHmihy;
	ScriptNode nodeBye;
	ScriptNode nodeEnd;

	DialogueAction dialogueAction, emptyDialogueAction;
	DialogueActionArgument dialogueActionArgument;

	dialogueScript.ScriptDescriptor <- 'Manager';

	// Node - Welcome
	nodeWelcome <- createScriptNode( 'welcome', 'tell' );
	nodeWelcome.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'offer', 'welcome' );
	BatchInsertEnd(nodeWelcome.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'welcome', 'finalized'));
	BatchInsertEnd( nodeWelcome.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'welcome', 'finalized' ));

	// Node - Hmihy
	nodeHmihy <- createScriptNode( 'hmihy', 'wait' );
	nodeHmihy.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'offer', 'hmihy' );
	BatchInsertEnd( nodeHmihy.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'welcome', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'hmihy', 'finalized' ));

	// Node - Bye
	nodeBye <- createScriptNode( 'bye', 'tell' );
	nodeBye.ScriptNodeContent <- setNodeContent( 'social', 'goodbye', '', '' );
	BatchInsertEnd( nodeBye.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'bye', 'finalized' ));

	// Node - End
	nodeEnd <- createScriptNode( 'end', 'execute' );
	BatchInsertEnd( nodeEnd.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeEnd.ScriptNodePostconditions, createDialogueAction0Arguments( 'pull_script' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeWelcome );
	BatchInsertEnd( dialogueScript.ScriptNodes, nodeHmihy );
	BatchInsertEnd( dialogueScript.ScriptNodes, nodeBye );
	BatchInsertEnd( dialogueScript.ScriptNodes, nodeEnd );
				
	return dialogueScript;
}

/*
DialogueScript	createDialogueScriptMedicalAppointment()
{
	DialogueScript dialogueScript;
	ScriptNode scriptNode;

	dialogueScript.ScriptDescriptor <- 'MedicalAppointment';

	// Item - ActionScope
	scriptNode <- createScriptNodeDCategoryDReference( 'ActionScope', 'Request/Appointment' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - MedicalSpeciality
	scriptNode <- createScriptNodeDCategory( 'Parameter/Speciality' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - AppointmentPlace
	scriptNode <- createScriptNodeDCategory( 'Parameter/City' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - AppointmentDate
	scriptNode <- createScriptNodeDCategory( 'Parameter/Schedule' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - PESEL
	scriptNode <- createScriptNodeDCategory( 'Parameter/Pesel' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - PhoneNumber
	scriptNode <- createScriptNodeDCategory( 'Parameter/PhoneNumber' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - ProposeDate
	scriptNode <- createScriptNodeDCategory( 'Propose/Date' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	return dialogueScript;
}

DialogueScript	createDialogueScriptBankConsultBalance()
{
	DialogueScript dialogueScript;
	ScriptNode scriptNode;

	dialogueScript.ScriptDescriptor <- 'BankConsultBalance';

	// Item - ActionScope
	scriptNode <- createScriptNodeDCategoryDReference( 'ActionScope', 'Consult/Balance' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	return dialogueScript;
}

DialogueScript	createDialogueScriptBankLocateATM()
{
	DialogueScript dialogueScript;
	ScriptNode scriptNode;

	dialogueScript.ScriptDescriptor <- 'BankLocateATM';

	// Item - ActionScope
	scriptNode <- createScriptNodeDCategoryDReference( 'ActionScope', 'Locate/ATM' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	return dialogueScript;
}

DialogueScript	createDialogueScriptBankTransfer()
{
	DialogueScript dialogueScript;
	ScriptNode scriptNode;

	dialogueScript.ScriptDescriptor <- 'BankTransfer';

	// Item - ActionScope
	scriptNode <- createScriptNodeDCategoryDReference( 'ActionScope', 'Command/Transfer' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - Account
	scriptNode <- createScriptNodeDCategory( 'Parameter/Account' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - Amount
	scriptNode <- createScriptNodeDCategory( 'Parameter/Amount' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - ProposeTransfer
	scriptNode <- createScriptNodeDCategory( 'Propose/Transfer' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	// Item - ConfirmTransfer
	scriptNode <- createScriptNodeDCategory( 'Confirm/Transfer' );
	BatchInsertEnd( dialogueScript.ScriptNodes,
			scriptNode );

	return dialogueScript;
}

*/

