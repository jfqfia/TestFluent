// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

DialogueScript	createDialogueScriptManager()
{
	DialogueScript dialogueScript;
	DialogueAction dialogueAction, emptyDialogueAction;
	DialogueActionArgument dialogueActionArgument;

	ScriptNode nodeWelcome;
	ScriptNode nodeHmihy;
	ScriptNode nodeExplicit1;
	ScriptNode nodeExplicit2;
	ScriptNode nodeBye;
	ScriptNode nodeEnd;

	dialogueScript.ScriptDescriptor <- 'Manager';

	// Node - Welcome
	nodeWelcome <- createScriptNode( 'welcome', 'execute' , 1);
	nodeWelcome.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'offer', 'welcome' );
	BatchInsertEnd( nodeWelcome.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'welcome', 'finalized'));
	BatchInsertEnd( nodeWelcome.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'welcome', 'finalized' ));
	BatchInsertEnd( nodeWelcome.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeWelcome );

	// Node - Hmihy
	nodeHmihy <- createScriptNode( 'hmihy', 'wait' , 1);
	nodeHmihy.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'offer', 'hmihy' );
	BatchInsertEnd( nodeHmihy.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'welcome', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeHmihy );

	// Node - Explicit1
	nodeExplicit1 <- createScriptNode( 'explicit1', 'wait', 1);
	nodeExplicit1.ScriptNodeContent <- setNodeContent( 'statement', 'inform', 'explicit', 'continuemanager' );
	BatchInsertEnd( nodeExplicit1.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeExplicit1.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'explicit1', 'finalized' ));
	BatchInsertEnd( nodeExplicit1.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'explicit1', 'finalized' ));
	BatchInsertEnd( nodeExplicit1.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeExplicit1 );

	// Node - Explicit2
	nodeExplicit2 <- createScriptNode( 'explicit2', 'execute', 1);
	BatchInsertEnd( nodeExplicit2.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'explicit1', 'finalized' ));
	BatchInsertEnd( nodeExplicit2.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'explicit2', 'finalized' ));
	BatchInsertEnd( nodeExplicit2.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'explicit1', 'notfinalized' ));
	BatchInsertEnd( nodeExplicit2.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'hmihy', 'notfinalized' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeExplicit2 );
	
	// Node - Bye
	nodeBye <- createScriptNode( 'bye', 'execute', 1 );
	nodeBye.ScriptNodeContent <- setNodeContent( 'social', 'goodbye', '', '' );
	BatchInsertEnd( nodeBye.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'explicit1', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeBye );

	// Node - End
	nodeEnd <- createScriptNode( 'end', 'execute', 1 );
	BatchInsertEnd( nodeEnd.ScriptNodePreconditions, createPrecondition2Arguments( 'is_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeEnd.ScriptNodePostconditions, createDialogueAction0Arguments( 'pull_script' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeEnd );
				
	return dialogueScript;
}

DialogueScript createDialogueScriptConsultBalance()
{
	// Script Descriptor
	DialogueScript dialogueScript;
	dialogueScript.ScriptDescriptor <- 'ConsultBalance';

	// Trigger
	dialogueScript.ScriptTrigger.CoreDialogueAct.Dimension <- 'statement';
	dialogueScript.ScriptTrigger.CoreDialogueAct.Function <- 'request';
	dialogueScript.ScriptTrigger.ActionDomain <- 'consult';
	dialogueScript.ScriptTrigger.Scope <- 'bankaccount';
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'accountnumber' );
	
	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'core';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Dimension <- 'statement';
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Function <- 'request';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );
	
	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'action';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.ActionDomain <- 'consult';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'scope';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.Scope <- 'bankaccount';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'accountnumber';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'moneyamount';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	// Phases

	// Phase 1
	dialogueScript <- scriptActivation(dialogueScript, 1);

	// Phase 2
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 2, 'accountnumber');

	// Phase 3
	dialogueScript <- proposeInfoItem1(dialogueScript, 3, 'moneyamount', 'get_balance', 'accountnumber');

	// Phase 4	
	dialogueScript <- informExplicitParameter(dialogueScript, 4, 'moneyamount');

	// Phase 5
	dialogueScript <- endScript(dialogueScript,5);

	return dialogueScript;
}

DialogueScript createDialogueScriptLocateAtm()
{
	// Script Descriptor
	DialogueScript dialogueScript;
	dialogueScript.ScriptDescriptor <- 'LocateAtm';

	// Trigger
	dialogueScript.ScriptTrigger.CoreDialogueAct.Dimension <- 'statement';
	dialogueScript.ScriptTrigger.CoreDialogueAct.Function <- 'request';
	dialogueScript.ScriptTrigger.ActionDomain <- 'locate';
	dialogueScript.ScriptTrigger.Scope <- 'atm';
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'countryplace' );
	
	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'core';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Dimension <- 'statement';
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Function <- 'request';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );
	
	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'action';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.ActionDomain <- 'locate';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'scope';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.Scope <- 'atm';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'countryplace';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	// Phases

	// Phase 1
	dialogueScript <- scriptActivation(dialogueScript, 1);

	// Phase 2
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 2, 'countryplace');

	// Phase 3
	dialogueScript <- executeBackOffice1(dialogueScript, 3, 'get_nearest_atm', 'countryplace');

	// Phase 4	
	dialogueScript <- informExplicit(dialogueScript, 4, 'statement', 'inform', 'locate', 'atm');

	// Phase 5
	dialogueScript <- endScript(dialogueScript,5);
	
	return dialogueScript;
}

DialogueScript createDialogueScriptMakeTransfer()
{
	// Script Descriptor
	DialogueScript dialogueScript;
	dialogueScript.ScriptDescriptor <- 'MakeTransfer';

	// Trigger
	dialogueScript.ScriptTrigger.CoreDialogueAct.Dimension <- 'statement';
	dialogueScript.ScriptTrigger.CoreDialogueAct.Function <- 'request';
	dialogueScript.ScriptTrigger.ActionDomain <- 'execute';
	dialogueScript.ScriptTrigger.Scope <- 'transfer';
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'accountnumber' );
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'moneyamount' );
	
	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'core';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Dimension <- 'statement';
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Function <- 'request';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );
	
	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'action';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.ActionDomain <- 'execute';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'scope';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.Scope <- 'transfer';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'accountnumber';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'moneyamount';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	// Phases

	// Phase 1
	dialogueScript <- scriptActivation(dialogueScript, 1);

	// Phase 2
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 2, 'accountnumber');
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 2, 'moneyamount');

	// Phase 3
	dialogueScript <- executeBackOffice2(dialogueScript, 3, 'execute_transfer', 'accountnumber', 'moneyamount');

	// Phase 4	
	dialogueScript <- informExplicit(dialogueScript, 4, 'statement', 'inform', 'say', 'everythingok');

	// Phase 5
	dialogueScript <- endScript(dialogueScript,5);
	
	return dialogueScript;
}

DialogueScript createDialogueScriptMedicalAppointment()
{
	// Script Descriptor
	DialogueScript dialogueScript;
	dialogueScript.ScriptDescriptor <- 'BookAppointment';

	// Trigger
	dialogueScript.ScriptTrigger.CoreDialogueAct.Dimension <- 'statement';
	dialogueScript.ScriptTrigger.CoreDialogueAct.Function <- 'request';
	dialogueScript.ScriptTrigger.ActionDomain <- 'book';
	dialogueScript.ScriptTrigger.Scope <- 'appointment';
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'medicalspeciality' );
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'countryplace' );
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'datetime' );
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'phonenumber' );
	BatchInsertEnd( dialogueScript.ScriptTrigger.ParameterTypes , 'peselnumber' );
	
	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'core';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Dimension <- 'statement';
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Function <- 'request';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );
	
	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'action';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.ActionDomain <- 'book';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'scope';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.Scope <- 'appointment';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'medicalspeciality';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'countryplace';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'datetime';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'phonenumber';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';	
	scriptInfoItem.InfoItemParameterType <- 'peselnumber';	
	scriptInfoItem.InfoItemState <- 'empty';	
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	// Phases

	// Phase 1
	dialogueScript <- scriptActivation(dialogueScript, 1);

	// Phase 2
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 2, 'medicalspeciality');
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 2, 'countryplace');
	dialogueScript <- captureOptionalParameter(dialogueScript, 2, 'datetime');

	// Phase 3
	dialogueScript <- negotiateParameter3(dialogueScript, 3, 'datetime', 'negotiate_datetime_medical_appointment', 'datetime', 'medicalspeciality', 'countryplace');

	// Phase 4	
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 4, 'phonenumber');
	dialogueScript <- captureCompulsoryParameter(dialogueScript, 4, 'peselnumber');

	// Phase 5	
	dialogueScript <- informExplicitParameters3(dialogueScript, 5, 'datetime', 'medicalspeciality', 'countryplace');

	// Phase 6
	dialogueScript <- endScript(dialogueScript, 6);
	
	return dialogueScript;
}

