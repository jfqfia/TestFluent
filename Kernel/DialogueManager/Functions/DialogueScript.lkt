// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

DialogueScript createDialogueScriptGreetings()
{
	DialogueScript dialogueScript;
	DialogueAction dialogueAction, emptyDialogueAction;
	DialogueActionArgument dialogueActionArgument;

	// Script Descriptor
	dialogueScript.ScriptDescriptor <- 'RecurrentGreetings';

	// Trigger
	dialogueScript.ScriptTrigger.CoreDialogueAct.Dimension <- 'social';
	dialogueScript.ScriptTrigger.CoreDialogueAct.Function <- 'greeting';
	
	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'core';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Dimension <- 'social';
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Function <- 'greeting';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	ScriptNode nodeTrigger;
	string suffix = '_scriptactivation';
	string nodeName1;

	// Node - Trigger
	nodeName1 <- LiteralConcat( 'trigger', suffix );	
	nodeTrigger <- createScriptNode( nodeName1, 'execute', 1 );
	nodeTrigger.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'recurrent', '');
	BatchInsertEnd( nodeTrigger.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));
	BatchInsertEnd( nodeTrigger.ScriptNodePostconditions, createDialogueAction0Arguments( 'pull_script_fast' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeTrigger );

	return dialogueScript;	
}

DialogueScript	createDialogueScriptManager()
{
	DialogueScript dialogueScript;
	DialogueAction dialogueAction, emptyDialogueAction;
	DialogueActionArgument dialogueActionArgument;

	ScriptNode nodeWelcome;
	ScriptNode nodeHmihy;
	ScriptNode nodeExplicit1;
	ScriptNode nodeExplicit2;
	ScriptNode nodeBye;
	ScriptNode nodeEnd;

	dialogueScript.ScriptDescriptor <- 'Manager';

	// Node - Welcome
	nodeWelcome <- createScriptNode( 'welcome', 'execute' , 1);
	nodeWelcome.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'offer', 'welcome' );
	BatchInsertEnd( nodeWelcome.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'welcome', 'finalized'));
	BatchInsertEnd( nodeWelcome.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'welcome', 'finalized' ));
	BatchInsertEnd( nodeWelcome.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeWelcome );

	// Node - Hmihy
	nodeHmihy <- createScriptNode( 'hmihy', 'wait' , 2);
	nodeHmihy.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'offer', 'hmihy' );
	BatchInsertEnd( nodeHmihy.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'hmihy', 'finalized' ));
	BatchInsertEnd( nodeHmihy.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeHmihy );

	// Node - Explicit2
	nodeExplicit2 <- createScriptNode( 'explicit2', 'execute', 3);
	BatchInsertEnd( nodeExplicit2.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'digested_core', 'basicanswer', 'disagreement' ));
	BatchInsertEnd( nodeExplicit2.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'hmihy', 'notfinalized' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeExplicit2 );
	
	// Node - Bye
	nodeBye <- createScriptNode( 'bye', 'execute', 4 );
	nodeBye.ScriptNodeContent <- setNodeContent( 'social', 'goodbye', '', '' );
	BatchInsertEnd( nodeBye.ScriptNodePreconditions, createNegatedPrecondition2Arguments( 'is_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePostconditions, createDialogueAction2Arguments( 'set_node_state', 'bye', 'finalized' ));
	BatchInsertEnd( nodeBye.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeBye );

	// Node - End
	nodeEnd <- createScriptNode( 'end', 'execute', 5 );
	BatchInsertEnd( nodeEnd.ScriptNodePostconditions, createDialogueAction0Arguments( 'pull_script' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeEnd );
				
	return dialogueScript;
}

DialogueScript createDialogueScriptCancellations()
{
	DialogueScript dialogueScript;
	DialogueAction dialogueAction, emptyDialogueAction;
	DialogueActionArgument dialogueActionArgument;

	// Script Descriptor
	dialogueScript.ScriptDescriptor <- 'Cancellations';

	// Trigger
	/*
	dialogueScript.ScriptTrigger.CoreDialogueAct.Dimension <- 'social';
	dialogueScript.ScriptTrigger.CoreDialogueAct.Function <- 'greeting';
	
	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'core';	
	scriptInfoItem.InfoItemState <- 'empty';	
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Dimension <- 'social';
	scriptInfoItem.InfoItemValue.CoreDialogueAct.Function <- 'greeting';
	BatchInsertEnd( dialogueScript.ScriptInfoItems, scriptInfoItem );

	ScriptNode nodeTrigger;
	string suffix = '_scriptactivation';
	string nodeName1;

	// Node - Trigger
	nodeName1 <- LiteralConcat( 'trigger', suffix );	
	nodeTrigger <- createScriptNode( nodeName1, 'execute', 1 );
	nodeTrigger.ScriptNodeContent <- setNodeContent( 'social', 'greeting', 'recurrent', '');
	BatchInsertEnd( nodeTrigger.ScriptNodePostconditions, createDialogueAction0Arguments( 'generate' ));
	BatchInsertEnd( nodeTrigger.ScriptNodePostconditions, createDialogueAction0Arguments( 'pull_script_fast' ));

	BatchInsertEnd( dialogueScript.ScriptNodes, nodeTrigger );
	*/

	return dialogueScript;
}


