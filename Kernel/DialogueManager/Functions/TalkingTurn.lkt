// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

procedure startTalkingTurn()
{
	initMindBoardOutput();
}

procedure digestDialogueInput()
{
	// TODO
}

procedure activateScripts()
{
	// TODO
}

procedure selectCurrentNode()
{
	DialogueScript dialogueScript;
	ScriptNodeDescriptor nodeDescriptor;
	int size;
	int position;
	ActivatedScriptNodes activatedScriptNodes;
	ScriptNode node;

	dialogueScript <- getCurrentScript( );
	size <- BatchSize( dialogueScript.ScriptNodes );
	for(position <- 1; position <= size; position++) 
	{
		BatchRecoverPosition( dialogueScript.ScriptNodes, position, node );
		if( preconditionsValidated(node) )
		{ 
			BatchInsertEnd( activatedScriptNodes, node.ScriptNodeDescriptor );
		}
	}

	dialogueScript.ActivatedScriptNodes <- activatedScriptNodes;

	// TODO
	// Define activated nodes policy
	// Here we select last node as current

	size <- BatchSize( activatedScriptNodes );
	if( size > 0 )
	{
		BatchRecoverPosition( activatedScriptNodes, size, nodeDescriptor );
		dialogueScript.CurrentNodeDescriptor <- nodeDescriptor;
	}
	else
	{
		dialogueScript.CurrentNodeDescriptor <- '';
	}

	setScript( dialogueScript );
}

procedure processTellNode()
{
	ScriptNode currentNode;

	currentNode <- getCurrentNode();

	BatchInsertEnd( $MINDBOARD@DialogueOutput.DialogueActs, 
			currentNode.ScriptNodeContent.DialogueAct );

	executePostconditions( currentNode );
}

procedure processExecuteNode()
{
	ScriptNode currentNode;

	currentNode <- getCurrentNode();

	executePostconditions( currentNode );
}

procedure processWaitNode()
{
	ScriptNode currentNode;

	currentNode <- getCurrentNode();

	BatchInsertEnd( $MINDBOARD@DialogueOutput.DialogueActs, 
			currentNode.ScriptNodeContent.DialogueAct );

	executePostconditions( currentNode );
}

procedure closeTalkingTurn()
{
	initMindBoardInput();
}




