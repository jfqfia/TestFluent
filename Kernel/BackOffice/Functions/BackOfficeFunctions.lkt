// **************************************************
//
//	
//
// **************************************************
//
//	PROJECT	:	
//	MODULE  :	
//	PACKAGE :	
//	FILE	:	
//
// **************************************************

Parameter executeBackOfficeFunction(string backOfficeFunctionName, Parameters parameters)
{
	// TODO Should we search this functions inside possible domains?
	if( backOfficeFunctionName == 'get_medical_appointment_availability' )
	{
		return getAvailabilityMedicalAppointment(parameters);
	}
	if( backOfficeFunctionName == 'get_balance' )
	{
		return getBalance(parameters);
	}
}

Parameter getAvailabilityMedicalAppointment(Parameters parameters)
{
	Parameter returnedParameter;
	Parameter param1, param2, param3;

	BatchRecoverPosition( parameters, 1, param1 );
	BatchRecoverPosition( parameters, 2, param2 );
	BatchRecoverPosition( parameters, 3, param3 );

	// TODO Here we must simulate the back office call
	param2.ParameterValue.DateTime.GeneralTime.BaseTime.Hour <- 11;
	returnedParameter <- param2;	

	return returnedParameter;
}
	
Parameter getBalance(Parameters parameters)
{
	Parameter returnedParameter;
	Parameter param1;

	BatchRecoverPosition( parameters, 1, param1 );
	MoneyAmount moneyAmount;
	AccountNumber accountNumber <- param1.ParameterValue.AccountNumber;

	// TODO Here we must simulate the back office call
	// moneyAmount <- getBalanceBackOffice( accountNumber );
	moneyAmount.Currency <- 'EUR';
	moneyAmount.IntegerAmount.NumberValue <- Random(2000, 2999);
	moneyAmount.DecimalAmount.NumberValue <- Random(0, 99);

	returnedParameter.ParameterValue.MoneyAmount <- moneyAmount;
	returnedParameter.ParameterCategory <- 'terminal';
	returnedParameter.ParameterType <- 'moneyamount';

	return returnedParameter;
}
